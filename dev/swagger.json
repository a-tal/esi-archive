{
    "basePath": "/dev",
    "host": "esi.tech.ccp.is",
    "info": {
        "description": "An OpenAPI for EVE Online",
        "title": "EVE Swagger Interface",
        "version": "0.2.6.dev1"
    },
    "paths": {
        "/characters/names/": {
            "get": {
                "description": "Resolve a set of character IDs to character names\n\n---\n\nAlternate route: `/v1/characters/names/`\n\nAlternate route: `/legacy/characters/names/`\n\nAlternate route: `/latest/characters/names/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_names",
                "parameters": [
                    {
                        "description": "A comma separated list of character IDs",
                        "in": "query",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "minItems": 1,
                        "name": "character_ids",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of id/name associations",
                        "examples": {
                            "application/json": [
                                {
                                    "character_id": 95465499,
                                    "character_name": "CCP Bartender"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "character_id": {
                                        "description": "character_id integer",
                                        "format": "int64",
                                        "title": "get_characters_names_character_id",
                                        "type": "integer"
                                    },
                                    "character_name": {
                                        "description": "character_name string",
                                        "title": "get_characters_names_character_name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "character_id",
                                    "character_name"
                                ],
                                "title": "get_characters_names_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_names_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_names_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_names_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get character names",
                "tags": [
                    "Live",
                    "Character"
                ]
            }
        },
        "/characters/{character_id}/": {
            "get": {
                "description": "Public information about a character\n\n---\n\nAlternate route: `/v3/characters/{character_id}/`\n\nAlternate route: `/legacy/characters/{character_id}/`\n\nAlternate route: `/latest/characters/{character_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data for the given character",
                        "examples": {
                            "application/json": {
                                "ancestry_id": 19,
                                "birthday": "2015-03-24T11:37:00Z",
                                "bloodline_id": 3,
                                "corporation_id": 109299958,
                                "description": "",
                                "gender": "male",
                                "name": "CCP Bartender",
                                "race_id": 2
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "ancestry_id": {
                                    "description": "ancestry_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_ancestry_id",
                                    "type": "integer"
                                },
                                "birthday": {
                                    "description": "Creation date of the character",
                                    "format": "date-time",
                                    "title": "get_characters_character_id_birthday",
                                    "type": "string"
                                },
                                "bloodline_id": {
                                    "description": "bloodline_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_bloodline_id",
                                    "type": "integer"
                                },
                                "corporation_id": {
                                    "description": "The character's corporation ID",
                                    "format": "int32",
                                    "title": "get_characters_character_id_corporation_id",
                                    "type": "integer"
                                },
                                "description": {
                                    "description": "description string",
                                    "title": "get_characters_character_id_description",
                                    "type": "string"
                                },
                                "gender": {
                                    "description": "gender string",
                                    "enum": [
                                        "female",
                                        "male"
                                    ],
                                    "title": "get_characters_character_id_gender",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The name of the character",
                                    "title": "get_characters_character_id_name",
                                    "type": "string"
                                },
                                "race_id": {
                                    "description": "race_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_race_id",
                                    "type": "integer"
                                },
                                "security_status": {
                                    "description": "security_status number",
                                    "format": "float",
                                    "maximum": 10,
                                    "minimum": -10,
                                    "title": "get_characters_character_id_security_status",
                                    "type": "number"
                                }
                            },
                            "required": [
                                "corporation_id",
                                "birthday",
                                "name",
                                "gender",
                                "race_id",
                                "description",
                                "bloodline_id",
                                "ancestry_id"
                            ],
                            "title": "get_characters_character_id_ok",
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Is not a character ID",
                        "examples": {
                            "application/json": {
                                "error": "98000001 is not a character ID"
                            }
                        },
                        "schema": {
                            "description": "Is not a character ID",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_characters_character_id_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get character's public information",
                "tags": [
                    "Live",
                    "Character"
                ]
            }
        },
        "/characters/{character_id}/calendar/": {
            "get": {
                "description": "Get 50 event summaries from the calendar. If no event ID is given,\nthe resource will return the next 50 chronological event summaries\nfrom now. If an event ID is specified, it will return the next 50\nchronological event summaries from after that event.\n\n\n---\n\nAlternate route: `/v1/characters/{character_id}/calendar/`\n\nAlternate route: `/legacy/characters/{character_id}/calendar/`\n\nAlternate route: `/latest/characters/{character_id}/calendar/`\n\n\n---\n\nThis route is cached for up to 5 seconds",
                "operationId": "get_characters_character_id_calendar",
                "parameters": [
                    {
                        "description": "The character to retrieve events from",
                        "format": "int64",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The event ID to retrieve events from",
                        "format": "int32",
                        "in": "query",
                        "name": "from_event",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A collection of event summaries",
                        "examples": {
                            "application/json": [
                                {
                                    "event_date": "2016-06-26T20:00:00Z",
                                    "event_id": 1386435,
                                    "event_response": "accepted",
                                    "importance": 0,
                                    "title": "o7 The EVE Online Show"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "Up to 50 events from now or the event you requested\n",
                            "items": {
                                "description": "event",
                                "properties": {
                                    "event_date": {
                                        "description": "event_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_calendar_event_date",
                                        "type": "string"
                                    },
                                    "event_id": {
                                        "description": "event_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_calendar_event_id",
                                        "type": "integer"
                                    },
                                    "event_response": {
                                        "description": "event_response string",
                                        "enum": [
                                            "declined",
                                            "not_responded",
                                            "accepted",
                                            "tentative"
                                        ],
                                        "title": "get_characters_character_id_calendar_event_response",
                                        "type": "string"
                                    },
                                    "importance": {
                                        "description": "importance integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_calendar_importance",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "title string",
                                        "title": "get_characters_character_id_calendar_title",
                                        "type": "string"
                                    }
                                },
                                "title": "get_characters_character_id_calendar_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_calendar_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-calendar.read_calendar_events.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_calendar_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_calendar_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_calendar_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_calendar_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-calendar.read_calendar_events.v1"
                        ]
                    }
                ],
                "summary": "List calendar event summaries",
                "tags": [
                    "Live",
                    "Calendar"
                ]
            }
        },
        "/characters/{character_id}/calendar/{event_id}/": {
            "get": {
                "description": "Get all the information for a specific event\n\n---\n\nAlternate route: `/v3/characters/{character_id}/calendar/{event_id}/`\n\nAlternate route: `/latest/characters/{character_id}/calendar/{event_id}/`\n\n\n---\n\nThis route is cached for up to 5 seconds",
                "operationId": "get_characters_character_id_calendar_event_id",
                "parameters": [
                    {
                        "description": "The character id requesting the event",
                        "format": "int64",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The id of the event requested",
                        "format": "int32",
                        "in": "path",
                        "name": "event_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full details of a specific event",
                        "examples": {
                            "application/json": {
                                "date": "2016-06-26T21:00:00Z",
                                "duration": 60,
                                "event_id": 1386435,
                                "importance": 1,
                                "owner_id": 1,
                                "owner_name": "EVE System",
                                "owner_type": "eve_server",
                                "response": "Undecided",
                                "text": "o7: The EVE Online Show features latest developer news, fast paced action, community overviews and a lot more with CCP Guard and CCP Mimic. Join the thrilling o7 live broadcast at 20:00 EVE time (=UTC) on <a href=\"http://www.twitch.tv/ccp\">EVE TV</a>. Don't miss it!",
                                "title": "o7 The EVE Online Show"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "Full details of a specific event",
                            "properties": {
                                "date": {
                                    "description": "date string",
                                    "format": "date-time",
                                    "title": "get_characters_character_id_calendar_event_id_date",
                                    "type": "string"
                                },
                                "duration": {
                                    "description": "Length in minutes",
                                    "format": "int64",
                                    "title": "get_characters_character_id_calendar_event_id_duration",
                                    "type": "integer"
                                },
                                "event_id": {
                                    "description": "event_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_calendar_event_id_event_id",
                                    "type": "integer"
                                },
                                "importance": {
                                    "description": "importance integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_calendar_event_id_importance",
                                    "type": "integer"
                                },
                                "owner_id": {
                                    "description": "owner_id integer",
                                    "format": "int64",
                                    "title": "get_characters_character_id_calendar_event_id_owner_id",
                                    "type": "integer"
                                },
                                "owner_name": {
                                    "description": "owner_name string",
                                    "title": "get_characters_character_id_calendar_event_id_owner_name",
                                    "type": "string"
                                },
                                "owner_type": {
                                    "description": "owner_type string",
                                    "enum": [
                                        "eve_server",
                                        "corporation",
                                        "faction",
                                        "character",
                                        "alliance"
                                    ],
                                    "title": "get_characters_character_id_calendar_event_id_owner_type",
                                    "type": "string"
                                },
                                "response": {
                                    "description": "response string",
                                    "title": "get_characters_character_id_calendar_event_id_response",
                                    "type": "string"
                                },
                                "text": {
                                    "description": "text string",
                                    "title": "get_characters_character_id_calendar_event_id_text",
                                    "type": "string"
                                },
                                "title": {
                                    "description": "title string",
                                    "title": "get_characters_character_id_calendar_event_id_title",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "event_id",
                                "owner_id",
                                "owner_name",
                                "date",
                                "title",
                                "duration",
                                "importance",
                                "response",
                                "text",
                                "owner_type"
                            ],
                            "title": "get_characters_character_id_calendar_event_id_ok",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-calendar.read_calendar_events.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_calendar_event_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_calendar_event_id_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_calendar_event_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_calendar_event_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-calendar.read_calendar_events.v1"
                        ]
                    }
                ],
                "summary": "Get an event",
                "tags": [
                    "Live",
                    "Calendar"
                ]
            },
            "put": {
                "description": "Set your response status to an event\n\n---\n\nAlternate route: `/v3/characters/{character_id}/calendar/{event_id}/`\n\nAlternate route: `/latest/characters/{character_id}/calendar/{event_id}/`\n",
                "operationId": "put_characters_character_id_calendar_event_id",
                "parameters": [
                    {
                        "description": "The character ID requesting the event",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The ID of the event requested",
                        "format": "int32",
                        "in": "path",
                        "name": "event_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The response value to set, overriding current value.",
                        "in": "body",
                        "name": "response",
                        "required": true,
                        "schema": {
                            "description": "response schema",
                            "properties": {
                                "response": {
                                    "description": "response string",
                                    "enum": [
                                        "accepted",
                                        "declined",
                                        "tentative"
                                    ],
                                    "title": "put_characters_character_id_calendar_event_id_response",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "response"
                            ],
                            "title": "put_characters_character_id_calendar_event_id_response"
                        }
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Event updated"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-calendar.respond_calendar_events.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "put_characters_character_id_calendar_event_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "put_characters_character_id_calendar_event_id_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "put_characters_character_id_calendar_event_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "put_characters_character_id_calendar_event_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-calendar.respond_calendar_events.v1"
                        ]
                    }
                ],
                "summary": "Respond to an event",
                "tags": [
                    "Live",
                    "Calendar"
                ]
            }
        },
        "/characters/{character_id}/clones/": {
            "get": {
                "description": "A list of the character's clones\n\n---\n\nAlternate route: `/v2/characters/{character_id}/clones/`\n\nAlternate route: `/latest/characters/{character_id}/clones/`\n\n\n---\n\nThis route is cached for up to 120 seconds",
                "operationId": "get_characters_character_id_clones",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Clone information for the given character",
                        "examples": {
                            "application/json": {
                                "home_location": {
                                    "location_id": 1021348135816,
                                    "location_type": "structure"
                                },
                                "jump_clones": [
                                    {
                                        "implants": [
                                            22118
                                        ],
                                        "location_id": 60003463,
                                        "location_type": "station"
                                    },
                                    {
                                        "implants": [],
                                        "location_id": 1021348135816,
                                        "location_type": "structure"
                                    }
                                ]
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "home_location": {
                                    "description": "home_location object",
                                    "properties": {
                                        "location_id": {
                                            "description": "location_id integer",
                                            "format": "int64",
                                            "title": "get_characters_character_id_clones_location_id",
                                            "type": "integer"
                                        },
                                        "location_type": {
                                            "description": "location_type string",
                                            "enum": [
                                                "station",
                                                "structure"
                                            ],
                                            "title": "get_characters_character_id_clones_location_type",
                                            "type": "string"
                                        }
                                    },
                                    "title": "get_characters_character_id_clones_home_location",
                                    "type": "object"
                                },
                                "jump_clones": {
                                    "description": "jump_clones array",
                                    "items": {
                                        "description": "jump_clone object",
                                        "properties": {
                                            "implants": {
                                                "description": "implants array",
                                                "items": {
                                                    "description": "implant integer",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_clones_implant",
                                                    "type": "integer"
                                                },
                                                "title": "get_characters_character_id_clones_implants",
                                                "type": "array"
                                            },
                                            "location_id": {
                                                "description": "location_id integer",
                                                "format": "int64",
                                                "title": "get_characters_character_id_clones_location_id",
                                                "type": "integer"
                                            },
                                            "location_type": {
                                                "description": "location_type string",
                                                "enum": [
                                                    "station",
                                                    "structure"
                                                ],
                                                "title": "get_characters_character_id_clones_location_type",
                                                "type": "string"
                                            }
                                        },
                                        "title": "get_characters_character_id_clones_jump_clone",
                                        "type": "object"
                                    },
                                    "title": "get_characters_character_id_clones_jump_clones",
                                    "type": "array"
                                },
                                "last_jump_date": {
                                    "description": "last_jump_date string",
                                    "format": "date-time",
                                    "title": "get_characters_character_id_clones_last_jump_date",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "jump_clones"
                            ],
                            "title": "get_characters_character_id_clones_ok",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-clones.read_clones.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_clones_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_clones_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_clones_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_clones_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-clones.read_clones.v1"
                        ]
                    }
                ],
                "summary": "Get clones",
                "tags": [
                    "Live",
                    "Clones"
                ]
            }
        },
        "/characters/{character_id}/corporationhistory/": {
            "get": {
                "description": "Get a list of all the corporations a character has been a member of\n\n---\n\nAlternate route: `/v1/characters/{character_id}/corporationhistory/`\n\nAlternate route: `/legacy/characters/{character_id}/corporationhistory/`\n\nAlternate route: `/latest/characters/{character_id}/corporationhistory/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_corporationhistory",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Corporation history for the given character",
                        "examples": {
                            "application/json": [
                                {
                                    "corporation_id": 90000001,
                                    "is_deleted": false,
                                    "record_id": 500,
                                    "start_date": "2016-06-26T20:00:00Z"
                                },
                                {
                                    "corporation_id": 90000002,
                                    "is_deleted": false,
                                    "record_id": 501,
                                    "start_date": "2016-07-26T20:00:00Z"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "corporation_id": {
                                        "description": "corporation_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_corporationhistory_corporation_id",
                                        "type": "integer"
                                    },
                                    "is_deleted": {
                                        "description": "True if the corporation has been deleted",
                                        "title": "get_characters_character_id_corporationhistory_is_deleted",
                                        "type": "boolean"
                                    },
                                    "record_id": {
                                        "description": "An incrementing ID that can be used to canonically establish order of records in cases where dates may be ambiguous",
                                        "format": "int32",
                                        "title": "get_characters_character_id_corporationhistory_record_id",
                                        "type": "integer"
                                    },
                                    "start_date": {
                                        "description": "start_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_corporationhistory_start_date",
                                        "type": "string"
                                    }
                                },
                                "title": "get_characters_character_id_corporationhistory_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_corporationhistory_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_corporationhistory_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_corporationhistory_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get corporation history",
                "tags": [
                    "Live",
                    "Character"
                ]
            }
        },
        "/characters/{character_id}/cspa/": {
            "post": {
                "description": "Takes a source character ID in the url and a set of target character ID's in the body, returns a CSPA charge cost\n\n---\n\nAlternate route: `/v3/characters/{character_id}/cspa/`\n\nAlternate route: `/legacy/characters/{character_id}/cspa/`\n\nAlternate route: `/latest/characters/{character_id}/cspa/`\n",
                "operationId": "post_characters_character_id_cspa",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The target characters to calculate the charge for",
                        "in": "body",
                        "name": "characters",
                        "required": true,
                        "schema": {
                            "description": "characters schema",
                            "properties": {
                                "characters": {
                                    "description": "characters array",
                                    "items": {
                                        "description": "character integer",
                                        "format": "int32",
                                        "title": "post_characters_character_id_cspa_character",
                                        "type": "integer"
                                    },
                                    "minItems": 1,
                                    "title": "post_characters_character_id_cspa_characters",
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": [
                                "characters"
                            ],
                            "title": "post_characters_character_id_cspa_characters"
                        }
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Aggregate cost of sending a mail from the source character to the target characters, in ISK hundredths",
                        "examples": {
                            "application/json": {
                                "cost": 295000
                            }
                        },
                        "schema": {
                            "description": "201 created object",
                            "properties": {
                                "cost": {
                                    "description": "cost integer",
                                    "format": "int64",
                                    "title": "post_characters_character_id_cspa_cost",
                                    "type": "integer"
                                }
                            },
                            "title": "post_characters_character_id_cspa_created",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.read_contacts.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_characters_character_id_cspa_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_cspa_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_characters_character_id_cspa_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_cspa_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_contacts.v1"
                        ]
                    }
                ],
                "summary": "Calculate a CSPA charge cost",
                "tags": [
                    "Live",
                    "Character"
                ]
            }
        },
        "/characters/{character_id}/mail/": {
            "get": {
                "description": "Return the 50 most recent mail headers belonging to the character that match the query criteria. Queries can be filtered by label, and last_mail_id can be used to paginate backwards.\n\n---\n\nAlternate route: `/v1/characters/{character_id}/mail/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/`\n\nAlternate route: `/latest/characters/{character_id}/mail/`\n\n\n---\n\nThis route is cached for up to 30 seconds",
                "operationId": "get_characters_character_id_mail",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Fetch only mails that match one or more of the given labels",
                        "in": "query",
                        "items": {
                            "format": "int64",
                            "minimum": 0,
                            "type": "integer"
                        },
                        "minItems": 1,
                        "name": "labels",
                        "required": false,
                        "type": "array",
                        "uniqueItems": true
                    },
                    {
                        "description": "List only mail with an ID lower than the given ID, if present",
                        "format": "int32",
                        "in": "query",
                        "name": "last_mail_id",
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested mail",
                        "examples": {
                            "application/json": [
                                {
                                    "from": 90000001,
                                    "is_read": true,
                                    "labels": [
                                        3
                                    ],
                                    "mail_id": 7,
                                    "recipients": [
                                        {
                                            "recipient_id": 90000002,
                                            "recipient_type": "character"
                                        }
                                    ],
                                    "subject": "Title for EVE Mail",
                                    "timestamp": "2015-09-30T16:07:00Z"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "from": {
                                        "description": "From whom the mail was sent",
                                        "format": "int32",
                                        "title": "get_characters_character_id_mail_from",
                                        "type": "integer"
                                    },
                                    "is_read": {
                                        "description": "is_read boolean",
                                        "title": "get_characters_character_id_mail_is_read",
                                        "type": "boolean"
                                    },
                                    "labels": {
                                        "description": "labels array",
                                        "items": {
                                            "description": "label integer",
                                            "format": "int64",
                                            "title": "get_characters_character_id_mail_label",
                                            "type": "integer"
                                        },
                                        "maxItems": 25,
                                        "minimum": 0,
                                        "title": "get_characters_character_id_mail_labels",
                                        "type": "array",
                                        "uniqueItems": true
                                    },
                                    "mail_id": {
                                        "description": "mail_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_mail_mail_id",
                                        "type": "integer"
                                    },
                                    "recipients": {
                                        "description": "Recipients of the mail",
                                        "items": {
                                            "description": "recipient object",
                                            "properties": {
                                                "recipient_id": {
                                                    "description": "recipient_id integer",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_mail_recipient_id",
                                                    "type": "integer"
                                                },
                                                "recipient_type": {
                                                    "description": "recipient_type string",
                                                    "enum": [
                                                        "alliance",
                                                        "character",
                                                        "corporation",
                                                        "mailing_list"
                                                    ],
                                                    "title": "get_characters_character_id_mail_recipient_type",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "recipient_type",
                                                "recipient_id"
                                            ],
                                            "title": "get_characters_character_id_mail_recipient",
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "title": "get_characters_character_id_mail_recipients",
                                        "type": "array",
                                        "uniqueItems": true
                                    },
                                    "subject": {
                                        "description": "Mail subject",
                                        "title": "get_characters_character_id_mail_subject",
                                        "type": "string"
                                    },
                                    "timestamp": {
                                        "description": "When the mail was sent",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_mail_timestamp",
                                        "type": "string"
                                    }
                                },
                                "title": "get_characters_character_id_mail_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_mail_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.read_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_mail_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_mail_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.read_mail.v1"
                        ]
                    }
                ],
                "summary": "Return mail headers",
                "tags": [
                    "Live",
                    "Mail"
                ]
            },
            "post": {
                "description": "Create and send a new mail\n\n---\n\nAlternate route: `/v1/characters/{character_id}/mail/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/`\n\nAlternate route: `/latest/characters/{character_id}/mail/`\n",
                "operationId": "post_characters_character_id_mail",
                "parameters": [
                    {
                        "description": "The sender's character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The mail to send",
                        "in": "body",
                        "name": "mail",
                        "required": true,
                        "schema": {
                            "description": "mail schema",
                            "properties": {
                                "approved_cost": {
                                    "default": 0,
                                    "description": "approved_cost integer",
                                    "format": "int64",
                                    "title": "post_characters_character_id_mail_approved_cost",
                                    "type": "integer"
                                },
                                "body": {
                                    "description": "body string",
                                    "maxLength": 10000,
                                    "title": "post_characters_character_id_mail_body",
                                    "type": "string"
                                },
                                "recipients": {
                                    "description": "recipients array",
                                    "items": {
                                        "description": "recipient object",
                                        "properties": {
                                            "recipient_id": {
                                                "description": "recipient_id integer",
                                                "format": "int32",
                                                "title": "post_characters_character_id_mail_recipient_id",
                                                "type": "integer"
                                            },
                                            "recipient_type": {
                                                "description": "recipient_type string",
                                                "enum": [
                                                    "alliance",
                                                    "character",
                                                    "corporation",
                                                    "mailing_list"
                                                ],
                                                "title": "post_characters_character_id_mail_recipient_type",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "recipient_type",
                                            "recipient_id"
                                        ],
                                        "title": "post_characters_character_id_mail_recipient",
                                        "type": "object"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "title": "post_characters_character_id_mail_recipients",
                                    "type": "array"
                                },
                                "subject": {
                                    "description": "subject string",
                                    "maxLength": 1000,
                                    "title": "post_characters_character_id_mail_subject",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "recipients",
                                "subject",
                                "body"
                            ],
                            "title": "post_characters_character_id_mail_mail"
                        }
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Mail created",
                        "examples": {
                            "application/json": 13
                        },
                        "schema": {
                            "description": "Mail ID",
                            "format": "int32",
                            "title": "post_characters_character_id_mail_created",
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Only one corporation, alliance, or mailing list can be the\nrecipient of a mail\n",
                        "examples": {
                            "application/json": {
                                "error": "Bad request message"
                            }
                        },
                        "schema": {
                            "description": "Bad request",
                            "properties": {
                                "error": {
                                    "description": "Bad request message",
                                    "title": "post_characters_character_id_mail_400_bad_request",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_mail_bad_request",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.send_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_characters_character_id_mail_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_mail_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_characters_character_id_mail_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_mail_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.send_mail.v1"
                        ]
                    }
                ],
                "summary": "Send a new mail",
                "tags": [
                    "Live",
                    "Mail"
                ]
            }
        },
        "/characters/{character_id}/mail/labels/": {
            "get": {
                "description": "Return a list of the users mail labels, unread counts for each label and a total unread count.\n\n---\n\nAlternate route: `/v3/characters/{character_id}/mail/labels/`\n\nAlternate route: `/latest/characters/{character_id}/mail/labels/`\n\n\n---\n\nThis route is cached for up to 30 seconds",
                "operationId": "get_characters_character_id_mail_labels",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of mail labels and unread counts",
                        "examples": {
                            "application/json": {
                                "labels": [
                                    {
                                        "color_hex": "#660066",
                                        "label_id": 16,
                                        "name": "PINK",
                                        "unread_count": 4
                                    },
                                    {
                                        "color_hex": "#ffffff",
                                        "label_id": 17,
                                        "name": "WHITE",
                                        "unread_count": 1
                                    }
                                ],
                                "total_unread_count": 5
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "labels": {
                                    "description": "labels array",
                                    "items": {
                                        "description": "label object",
                                        "properties": {
                                            "color": {
                                                "default": "#ffffff",
                                                "description": "color string",
                                                "enum": [
                                                    "#ffffff",
                                                    "#ffff01",
                                                    "#ff6600",
                                                    "#fe0000",
                                                    "#9a0000",
                                                    "#660066",
                                                    "#0000fe",
                                                    "#0099ff",
                                                    "#01ffff",
                                                    "#00ff33",
                                                    "#349800",
                                                    "#006634",
                                                    "#666666",
                                                    "#999999",
                                                    "#e6e6e6",
                                                    "#ffffcd",
                                                    "#99ffff",
                                                    "#ccff9a"
                                                ],
                                                "title": "get_characters_character_id_mail_labels_color",
                                                "type": "string"
                                            },
                                            "label_id": {
                                                "description": "label_id integer",
                                                "format": "int32",
                                                "minimum": 0,
                                                "title": "get_characters_character_id_mail_labels_label_id",
                                                "type": "integer"
                                            },
                                            "name": {
                                                "description": "name string",
                                                "maxLength": 40,
                                                "title": "get_characters_character_id_mail_labels_name",
                                                "type": "string"
                                            },
                                            "unread_count": {
                                                "description": "unread_count integer",
                                                "format": "int32",
                                                "minimum": 0,
                                                "title": "get_characters_character_id_mail_labels_unread_count",
                                                "type": "integer"
                                            }
                                        },
                                        "title": "get_characters_character_id_mail_labels_label",
                                        "type": "object"
                                    },
                                    "title": "get_characters_character_id_mail_labels_labels",
                                    "type": "array"
                                },
                                "total_unread_count": {
                                    "description": "total_unread_count integer",
                                    "format": "int32",
                                    "minimum": 0,
                                    "title": "get_characters_character_id_mail_labels_total_unread_count",
                                    "type": "integer"
                                }
                            },
                            "title": "get_characters_character_id_mail_labels_ok",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.read_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_mail_labels_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_labels_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_mail_labels_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_labels_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.read_mail.v1"
                        ]
                    }
                ],
                "summary": "Get mail labels and unread counts",
                "tags": [
                    "Live",
                    "Mail"
                ]
            },
            "post": {
                "description": "Create a mail label\n\n---\n\nAlternate route: `/v2/characters/{character_id}/mail/labels/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/labels/`\n\nAlternate route: `/latest/characters/{character_id}/mail/labels/`\n",
                "operationId": "post_characters_character_id_mail_labels",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Label to create",
                        "in": "body",
                        "name": "label",
                        "schema": {
                            "description": "label object",
                            "properties": {
                                "color": {
                                    "default": "#ffffff",
                                    "description": "Hexadecimal string representing label color,\nin RGB format\n",
                                    "enum": [
                                        "#ffffff",
                                        "#ffff01",
                                        "#ff6600",
                                        "#fe0000",
                                        "#9a0000",
                                        "#660066",
                                        "#0000fe",
                                        "#0099ff",
                                        "#01ffff",
                                        "#00ff33",
                                        "#349800",
                                        "#006634",
                                        "#666666",
                                        "#999999",
                                        "#e6e6e6",
                                        "#ffffcd",
                                        "#99ffff",
                                        "#ccff9a"
                                    ],
                                    "title": "post_characters_character_id_mail_labels_color",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "name string",
                                    "maxLength": 40,
                                    "minLength": 1,
                                    "title": "post_characters_character_id_mail_labels_name",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name"
                            ],
                            "title": "post_characters_character_id_mail_labels_label",
                            "type": "object"
                        }
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Label created",
                        "examples": {
                            "application/json": 128
                        },
                        "schema": {
                            "description": "Label ID",
                            "format": "int64",
                            "title": "post_characters_character_id_mail_labels_created",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.organize_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_characters_character_id_mail_labels_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_mail_labels_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_characters_character_id_mail_labels_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_mail_labels_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.organize_mail.v1"
                        ]
                    }
                ],
                "summary": "Create a mail label",
                "tags": [
                    "Live",
                    "Mail"
                ]
            }
        },
        "/characters/{character_id}/mail/lists/": {
            "get": {
                "description": "Return all mailing lists that the character is subscribed to\n\n\n---\n\nAlternate route: `/v1/characters/{character_id}/mail/lists/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/lists/`\n\nAlternate route: `/latest/characters/{character_id}/mail/lists/`\n\n\n---\n\nThis route is cached for up to 120 seconds",
                "operationId": "get_characters_character_id_mail_lists",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mailing lists",
                        "examples": {
                            "application/json": [
                                {
                                    "mailing_list_id": 1
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "mailing_list_id": {
                                        "description": "Mailing list ID",
                                        "format": "int32",
                                        "title": "get_characters_character_id_mail_lists_mailing_list_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "mailing_list_id"
                                ],
                                "title": "get_characters_character_id_mail_lists_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_mail_lists_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.read_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_mail_lists_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_lists_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_mail_lists_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_lists_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.read_mail.v1"
                        ]
                    }
                ],
                "summary": "Return mailing list subscriptions",
                "tags": [
                    "Live",
                    "Mail"
                ]
            }
        },
        "/characters/{character_id}/mail/{mail_id}/": {
            "delete": {
                "description": "Delete a mail\n\n---\n\nAlternate route: `/v1/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/latest/characters/{character_id}/mail/{mail_id}/`\n",
                "operationId": "delete_characters_character_id_mail_mail_id",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "An EVE mail ID",
                        "format": "int32",
                        "in": "path",
                        "name": "mail_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Mail deleted"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.organize_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "delete_characters_character_id_mail_mail_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "delete_characters_character_id_mail_mail_id_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "delete_characters_character_id_mail_mail_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "delete_characters_character_id_mail_mail_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.organize_mail.v1"
                        ]
                    }
                ],
                "summary": "Delete a mail",
                "tags": [
                    "Live",
                    "Mail"
                ]
            },
            "get": {
                "description": "Return the contents of an EVE mail\n\n---\n\nAlternate route: `/v1/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/latest/characters/{character_id}/mail/{mail_id}/`\n\n\n---\n\nThis route is cached for up to 30 seconds",
                "operationId": "get_characters_character_id_mail_mail_id",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "An EVE mail ID",
                        "format": "int32",
                        "in": "path",
                        "name": "mail_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contents of a mail",
                        "examples": {
                            "application/json": {
                                "body": "blah blah blah",
                                "from": 90000001,
                                "is_read": false,
                                "labels": [
                                    2,
                                    32
                                ],
                                "subject": "test",
                                "timestamp": "2015-09-30T16:07:00Z"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "body": {
                                    "description": "Mail's body",
                                    "title": "get_characters_character_id_mail_mail_id_body",
                                    "type": "string"
                                },
                                "from": {
                                    "description": "From whom the mail was sent",
                                    "format": "int32",
                                    "title": "get_characters_character_id_mail_mail_id_from",
                                    "type": "integer"
                                },
                                "labels": {
                                    "description": "Labels attached to the mail",
                                    "items": {
                                        "description": "label integer",
                                        "format": "int64",
                                        "minimum": 0,
                                        "title": "get_characters_character_id_mail_mail_id_label",
                                        "type": "integer",
                                        "uniqueItems": true
                                    },
                                    "title": "get_characters_character_id_mail_mail_id_labels",
                                    "type": "array"
                                },
                                "read": {
                                    "description": "Whether the mail is flagged as read",
                                    "title": "get_characters_character_id_mail_mail_id_read",
                                    "type": "boolean"
                                },
                                "recipients": {
                                    "description": "Recipients of the mail",
                                    "items": {
                                        "description": "recipient object",
                                        "properties": {
                                            "recipient_id": {
                                                "description": "recipient_id integer",
                                                "format": "int32",
                                                "title": "get_characters_character_id_mail_mail_id_recipient_id",
                                                "type": "integer"
                                            },
                                            "recipient_type": {
                                                "description": "recipient_type string",
                                                "enum": [
                                                    "alliance",
                                                    "character",
                                                    "corporation",
                                                    "mailing_list"
                                                ],
                                                "title": "get_characters_character_id_mail_mail_id_recipient_type",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "recipient_type",
                                            "recipient_id"
                                        ],
                                        "title": "get_characters_character_id_mail_mail_id_recipient",
                                        "type": "object"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "title": "get_characters_character_id_mail_mail_id_recipients",
                                    "type": "array",
                                    "uniqueItems": true
                                },
                                "subject": {
                                    "description": "Mail subject",
                                    "title": "get_characters_character_id_mail_mail_id_subject",
                                    "type": "string"
                                },
                                "timestamp": {
                                    "description": "When the mail was sent",
                                    "format": "date-time",
                                    "title": "get_characters_character_id_mail_mail_id_timestamp",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_mail_id_ok",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.read_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_mail_mail_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_mail_id_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Mail not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_characters_character_id_mail_mail_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_mail_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_mail_mail_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_mail_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.read_mail.v1"
                        ]
                    }
                ],
                "summary": "Return a mail",
                "tags": [
                    "Live",
                    "Mail"
                ]
            },
            "put": {
                "description": "Update metadata about a mail\n\n---\n\nAlternate route: `/v1/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/latest/characters/{character_id}/mail/{mail_id}/`\n",
                "operationId": "put_characters_character_id_mail_mail_id",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "An EVE mail ID",
                        "format": "int32",
                        "in": "path",
                        "name": "mail_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Data used to update the mail",
                        "in": "body",
                        "name": "contents",
                        "required": true,
                        "schema": {
                            "description": "contents object",
                            "properties": {
                                "labels": {
                                    "description": "Labels to assign to the mail. Pre-existing labels are unassigned.",
                                    "items": {
                                        "description": "label integer",
                                        "format": "int64",
                                        "minimum": 0,
                                        "title": "put_characters_character_id_mail_mail_id_label",
                                        "type": "integer",
                                        "uniqueItems": true
                                    },
                                    "title": "put_characters_character_id_mail_mail_id_labels",
                                    "type": "array"
                                },
                                "read": {
                                    "description": "Whether the mail is flagged as read",
                                    "title": "put_characters_character_id_mail_mail_id_read",
                                    "type": "boolean"
                                }
                            },
                            "title": "put_characters_character_id_mail_mail_id_contents",
                            "type": "object"
                        }
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Mail updated"
                    },
                    "400": {
                        "description": "Invalid label ID; or No parameters in body -- nothing to do",
                        "examples": {
                            "application/json": {
                                "error": "Bad request message"
                            }
                        },
                        "schema": {
                            "description": "Bad request",
                            "properties": {
                                "error": {
                                    "description": "Bad request message",
                                    "title": "put_characters_character_id_mail_mail_id_400_bad_request",
                                    "type": "string"
                                }
                            },
                            "title": "put_characters_character_id_mail_mail_id_bad_request",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.organize_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "put_characters_character_id_mail_mail_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "put_characters_character_id_mail_mail_id_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "put_characters_character_id_mail_mail_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "put_characters_character_id_mail_mail_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.organize_mail.v1"
                        ]
                    }
                ],
                "summary": "Update metadata about a mail",
                "tags": [
                    "Live",
                    "Mail"
                ]
            }
        },
        "/characters/{character_id}/portrait/": {
            "get": {
                "description": "Get portrait urls for a character\n\n---\n\nAlternate route: `/v2/characters/{character_id}/portrait/`\n\nAlternate route: `/latest/characters/{character_id}/portrait/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_portrait",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data for the given character",
                        "examples": {
                            "application/json": {
                                "px128x128": "https://imageserver.eveonline.com/Character/95465499_128.jpg",
                                "px256x256": "https://imageserver.eveonline.com/Character/95465499_256.jpg",
                                "px512x512": "https://imageserver.eveonline.com/Character/95465499_512.jpg",
                                "px64x64": "https://imageserver.eveonline.com/Character/95465499_64.jpg"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "px128x128": {
                                    "description": "px128x128 string",
                                    "title": "get_characters_character_id_portrait_px128x128",
                                    "type": "string"
                                },
                                "px256x256": {
                                    "description": "px256x256 string",
                                    "title": "get_characters_character_id_portrait_px256x256",
                                    "type": "string"
                                },
                                "px512x512": {
                                    "description": "px512x512 string",
                                    "title": "get_characters_character_id_portrait_px512x512",
                                    "type": "string"
                                },
                                "px64x64": {
                                    "description": "px64x64 string",
                                    "title": "get_characters_character_id_portrait_px64x64",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_portrait_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "No image server for this datasource",
                        "examples": {
                            "application/json": {
                                "error": "No image server for this datasource"
                            }
                        },
                        "schema": {
                            "description": "No image server for this datasource",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_characters_character_id_portrait_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_portrait_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_portrait_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_portrait_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get character portraits",
                "tags": [
                    "Live",
                    "Character"
                ]
            }
        },
        "/characters/{character_id}/skillqueue/": {
            "get": {
                "description": "List the configured skill queue for the given character\n\n---\n\nAlternate route: `/v2/characters/{character_id}/skillqueue/`\n\nAlternate route: `/legacy/characters/{character_id}/skillqueue/`\n\nAlternate route: `/latest/characters/{character_id}/skillqueue/`\n\n\n---\n\nThis route is cached for up to 120 seconds",
                "operationId": "get_characters_character_id_skillqueue",
                "parameters": [
                    {
                        "description": "Character id of the target character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The current skill queue, sorted ascending by finishing time",
                        "examples": {
                            "application/json": [
                                {
                                    "finish_date": "2016-06-29T10:47:00Z",
                                    "finished_level": 3,
                                    "queue_position": 0,
                                    "skill_id": 1,
                                    "start_date": "2016-06-29T10:46:00Z"
                                },
                                {
                                    "finish_date": "2016-07-15T10:47:00Z",
                                    "finished_level": 4,
                                    "queue_position": 1,
                                    "skill_id": 1,
                                    "start_date": "2016-06-29T10:47:00Z"
                                },
                                {
                                    "finish_date": "2016-08-30T10:47:00Z",
                                    "finished_level": 2,
                                    "queue_position": 2,
                                    "skill_id": 2,
                                    "start_date": "2016-07-15T10:47:00Z"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "finish_date": {
                                        "description": "finish_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_skillqueue_finish_date",
                                        "type": "string"
                                    },
                                    "finished_level": {
                                        "description": "finished_level integer",
                                        "format": "int32",
                                        "maximum": 5,
                                        "minimum": 0,
                                        "title": "get_characters_character_id_skillqueue_finished_level",
                                        "type": "integer"
                                    },
                                    "level_end_sp": {
                                        "description": "level_end_sp integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_skillqueue_level_end_sp",
                                        "type": "integer"
                                    },
                                    "level_start_sp": {
                                        "description": "Amount of SP that was in the skill when it started training it's current level. Used to calculate % of current level complete.",
                                        "format": "int32",
                                        "title": "get_characters_character_id_skillqueue_level_start_sp",
                                        "type": "integer"
                                    },
                                    "queue_position": {
                                        "description": "queue_position integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_skillqueue_queue_position",
                                        "type": "integer"
                                    },
                                    "skill_id": {
                                        "description": "skill_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_skillqueue_skill_id",
                                        "type": "integer"
                                    },
                                    "start_date": {
                                        "description": "start_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_skillqueue_start_date",
                                        "type": "string"
                                    },
                                    "training_start_sp": {
                                        "description": "training_start_sp integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_skillqueue_training_start_sp",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "skill_id",
                                    "finished_level",
                                    "queue_position"
                                ],
                                "title": "get_characters_character_id_skillqueue_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_skillqueue_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-skills.read_skillqueue.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_skillqueue_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_skillqueue_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_skillqueue_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_skillqueue_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-skills.read_skillqueue.v1"
                        ]
                    }
                ],
                "summary": "Get character's skill queue",
                "tags": [
                    "Live",
                    "Skills"
                ]
            }
        },
        "/characters/{character_id}/skills/": {
            "get": {
                "description": "List all trained skills for the given character\n\n---\n\nAlternate route: `/v3/characters/{character_id}/skills/`\n\nAlternate route: `/latest/characters/{character_id}/skills/`\n\n\n---\n\nThis route is cached for up to 120 seconds",
                "operationId": "get_characters_character_id_skills",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Known skills for the character",
                        "examples": {
                            "application/json": {
                                "skills": [
                                    {
                                        "current_skill_level": 1,
                                        "skill_id": 1,
                                        "skillpoints_in_skill": 10000
                                    },
                                    {
                                        "current_skill_level": 1,
                                        "skill_id": 2,
                                        "skillpoints_in_skill": 10000
                                    }
                                ],
                                "total_sp": 20000
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "skills": {
                                    "description": "skills array",
                                    "items": {
                                        "description": "skill object",
                                        "properties": {
                                            "current_skill_level": {
                                                "description": "current_skill_level integer",
                                                "format": "int32",
                                                "title": "get_characters_character_id_skills_current_skill_level",
                                                "type": "integer"
                                            },
                                            "skill_id": {
                                                "description": "skill_id integer",
                                                "format": "int32",
                                                "title": "get_characters_character_id_skills_skill_id",
                                                "type": "integer"
                                            },
                                            "skillpoints_in_skill": {
                                                "description": "skillpoints_in_skill integer",
                                                "format": "int64",
                                                "title": "get_characters_character_id_skills_skillpoints_in_skill",
                                                "type": "integer"
                                            }
                                        },
                                        "title": "get_characters_character_id_skills_skill",
                                        "type": "object"
                                    },
                                    "title": "get_characters_character_id_skills_skills",
                                    "type": "array"
                                },
                                "total_sp": {
                                    "description": "total_sp integer",
                                    "format": "int64",
                                    "title": "get_characters_character_id_skills_total_sp",
                                    "type": "integer"
                                }
                            },
                            "title": "get_characters_character_id_skills_ok",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-skills.read_skills.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_skills_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_skills_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_skills_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_skills_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-skills.read_skills.v1"
                        ]
                    }
                ],
                "summary": "Get character skills",
                "tags": [
                    "Live",
                    "Skills"
                ]
            }
        },
        "/characters/{character_id}/wallets/": {
            "get": {
                "description": "List your wallets and their balances. Characters typically have only one wallet, with wallet_id 1000 being the master wallet.\n\n---\n\nAlternate route: `/v1/characters/{character_id}/wallets/`\n\nAlternate route: `/legacy/characters/{character_id}/wallets/`\n\nAlternate route: `/latest/characters/{character_id}/wallets/`\n\n\n---\n\nThis route is cached for up to 120 seconds",
                "operationId": "get_characters_character_id_wallets",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wallet data for selected user",
                        "examples": {
                            "application/json": [
                                {
                                    "balance": 295000,
                                    "wallet_id": 1000
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "balance": {
                                        "description": "Wallet's balance in ISK hundredths.",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_balance",
                                        "type": "integer"
                                    },
                                    "wallet_id": {
                                        "description": "wallet_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_wallet_id",
                                        "type": "integer"
                                    }
                                },
                                "title": "get_characters_character_id_wallets_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_wallets_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-wallet.read_character_wallet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_wallets_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_wallets_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_wallets_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_wallets_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-wallet.read_character_wallet.v1"
                        ]
                    }
                ],
                "summary": "List wallets and balances",
                "tags": [
                    "Live",
                    "Wallet"
                ]
            }
        },
        "/characters/{character_id}/wallets/journal/": {
            "get": {
                "description": "Returns the most recent 50 entries for the characters wallet journal. Optionally, takes an argument with a reference ID, and returns the prior 50 entries from the journal.\n\n---\n\nAlternate route: `/v1/characters/{character_id}/wallets/journal/`\n\nAlternate route: `/legacy/characters/{character_id}/wallets/journal/`\n\nAlternate route: `/latest/characters/{character_id}/wallets/journal/`\n",
                "operationId": "get_characters_character_id_wallets_journal",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "A journal reference ID to paginate from",
                        "format": "int64",
                        "in": "query",
                        "name": "last_seen_id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Journal entries",
                        "examples": {
                            "application/json": [
                                {
                                    "ref_id": 1234567890,
                                    "ref_type": "foo",
                                    "transaction_date": "2016-10-24T09:00:00Z"
                                }
                            ]
                        },
                        "schema": {
                            "description": "wallet transactions",
                            "items": {
                                "description": "transaction",
                                "properties": {
                                    "argument_name": {
                                        "description": "argument_name string",
                                        "title": "get_characters_character_id_wallets_journal_argument_name",
                                        "type": "string"
                                    },
                                    "argument_value": {
                                        "description": "argument_value integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_journal_argument_value",
                                        "type": "integer"
                                    },
                                    "first_party_id": {
                                        "description": "first_party_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_journal_first_party_id",
                                        "type": "integer"
                                    },
                                    "first_party_type": {
                                        "description": "first_party_type string",
                                        "enum": [
                                            "character",
                                            "corporation",
                                            "alliance"
                                        ],
                                        "title": "get_characters_character_id_wallets_journal_first_party_type",
                                        "type": "string"
                                    },
                                    "post_transaction_balance": {
                                        "description": "post_transaction_balance integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_journal_post_transaction_balance",
                                        "type": "integer"
                                    },
                                    "reason": {
                                        "description": "reason string",
                                        "title": "get_characters_character_id_wallets_journal_reason",
                                        "type": "string"
                                    },
                                    "ref_id": {
                                        "description": "ref_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_journal_ref_id",
                                        "type": "integer"
                                    },
                                    "ref_type": {
                                        "description": "ref_type string",
                                        "title": "get_characters_character_id_wallets_journal_ref_type",
                                        "type": "string"
                                    },
                                    "second_party_id": {
                                        "description": "second_party_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_journal_second_party_id",
                                        "type": "integer"
                                    },
                                    "second_party_type": {
                                        "description": "second_party_type string",
                                        "enum": [
                                            "character",
                                            "corporation",
                                            "alliance"
                                        ],
                                        "title": "get_characters_character_id_wallets_journal_second_party_type",
                                        "type": "string"
                                    },
                                    "tax_amount": {
                                        "description": "tax_amount integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_journal_tax_amount",
                                        "type": "integer"
                                    },
                                    "tax_reciever_id": {
                                        "description": "tax_reciever_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_journal_tax_reciever_id",
                                        "type": "integer"
                                    },
                                    "transaction_amount": {
                                        "description": "Positive if transferred to first party, negative if transferred to second party",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_journal_transaction_amount",
                                        "type": "integer"
                                    },
                                    "transaction_date": {
                                        "description": "transaction_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_wallets_journal_transaction_date",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "transaction_date",
                                    "ref_id",
                                    "ref_type"
                                ],
                                "title": "get_characters_character_id_wallets_journal_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_wallets_journal_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-wallet.read_character_wallet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_wallets_journal_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_wallets_journal_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_wallets_journal_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_wallets_journal_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-wallet.read_character_wallet.v1"
                        ]
                    }
                ],
                "summary": "Get character wallet journal",
                "tags": [
                    "Wallet",
                    "Dummy"
                ]
            }
        },
        "/characters/{character_id}/wallets/transactions/": {
            "get": {
                "description": "Gets the 50 most recent transactions in a characters wallet. Optionally, takes an argument with a transaction ID, and returns the prior 50 transactions\n\n---\n\nAlternate route: `/v1/characters/{character_id}/wallets/transactions/`\n\nAlternate route: `/legacy/characters/{character_id}/wallets/transactions/`\n\nAlternate route: `/latest/characters/{character_id}/wallets/transactions/`\n",
                "operationId": "get_characters_character_id_wallets_transactions",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wallet transactions",
                        "examples": {
                            "application/json": [
                                {
                                    "transaction_date": "2016-10-24T09:00:00Z",
                                    "transaction_id": 1234567890
                                }
                            ]
                        },
                        "schema": {
                            "description": "wallet transactions",
                            "items": {
                                "description": "wallet transaction",
                                "properties": {
                                    "client_id": {
                                        "description": "client_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_transactions_client_id",
                                        "type": "integer"
                                    },
                                    "client_type": {
                                        "description": "client_type string",
                                        "enum": [
                                            "character",
                                            "corporation",
                                            "alliance"
                                        ],
                                        "title": "get_characters_character_id_wallets_transactions_client_type",
                                        "type": "string"
                                    },
                                    "journal_ref_id": {
                                        "description": "journal_ref_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_transactions_journal_ref_id",
                                        "type": "integer"
                                    },
                                    "location_id": {
                                        "description": "location_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_transactions_location_id",
                                        "type": "integer"
                                    },
                                    "location_type": {
                                        "description": "location_type string",
                                        "enum": [
                                            "station",
                                            "structure"
                                        ],
                                        "title": "get_characters_character_id_wallets_transactions_location_type",
                                        "type": "string"
                                    },
                                    "price_per_unit": {
                                        "description": "price_per_unit integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_transactions_price_per_unit",
                                        "type": "integer"
                                    },
                                    "quantity": {
                                        "description": "quantity integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_transactions_quantity",
                                        "type": "integer"
                                    },
                                    "transaction_date": {
                                        "description": "transaction_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_wallets_transactions_transaction_date",
                                        "type": "string"
                                    },
                                    "transaction_for": {
                                        "description": "transaction_for string",
                                        "enum": [
                                            "personal",
                                            "corporate"
                                        ],
                                        "title": "get_characters_character_id_wallets_transactions_transaction_for",
                                        "type": "string"
                                    },
                                    "transaction_id": {
                                        "description": "transaction_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_transactions_transaction_id",
                                        "type": "integer"
                                    },
                                    "transaction_type": {
                                        "description": "transaction_type string",
                                        "enum": [
                                            "buy",
                                            "sell"
                                        ],
                                        "title": "get_characters_character_id_wallets_transactions_transaction_type",
                                        "type": "string"
                                    },
                                    "type_id": {
                                        "description": "type_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_transactions_type_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "transaction_date",
                                    "transaction_id"
                                ],
                                "title": "get_characters_character_id_wallets_transactions_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_wallets_transactions_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-wallet.read_character_wallet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_wallets_transactions_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_wallets_transactions_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_wallets_transactions_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_wallets_transactions_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-wallet.read_character_wallet.v1"
                        ]
                    }
                ],
                "summary": "Get wallet transactions",
                "tags": [
                    "Wallet",
                    "Dummy"
                ]
            }
        },
        "/corporations/{corporation_id}/wallets/": {
            "get": {
                "description": "Dummy\n\n---\n\nAlternate route: `/v1/corporations/{corporation_id}/wallets/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/wallets/`\n\nAlternate route: `/latest/corporations/{corporation_id}/wallets/`\n",
                "operationId": "get_corporations_corporation_id_wallets",
                "parameters": [
                    {
                        "description": "An EVE corporation ID",
                        "format": "int32",
                        "in": "path",
                        "name": "corporation_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Nice Dummy"
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_corporations_corporation_id_wallets_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_wallets_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Dummy Endpoint, Please Ignore",
                "tags": [
                    "Wallet",
                    "Dummy"
                ]
            }
        },
        "/corporations/{corporation_id}/wallets/{wallet_id}/journal/": {
            "get": {
                "description": "Dummy\n\n---\n\nAlternate route: `/v1/corporations/{corporation_id}/wallets/{wallet_id}/journal/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/wallets/{wallet_id}/journal/`\n\nAlternate route: `/latest/corporations/{corporation_id}/wallets/{wallet_id}/journal/`\n",
                "operationId": "get_corporations_corporation_id_wallets_wallet_id_journal",
                "parameters": [
                    {
                        "description": "An EVE corporation ID",
                        "format": "int32",
                        "in": "path",
                        "name": "corporation_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Wallet ID",
                        "format": "int32",
                        "in": "path",
                        "name": "wallet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Nice Dummy"
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_corporations_corporation_id_wallets_wallet_id_journal_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_wallets_wallet_id_journal_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Dummy Endpoint, Please Ignore",
                "tags": [
                    "Wallet",
                    "Dummy"
                ]
            }
        },
        "/corporations/{corporation_id}/wallets/{wallet_id}/transactions/": {
            "get": {
                "description": "Dummy\n\n---\n\nAlternate route: `/v1/corporations/{corporation_id}/wallets/{wallet_id}/transactions/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/wallets/{wallet_id}/transactions/`\n\nAlternate route: `/latest/corporations/{corporation_id}/wallets/{wallet_id}/transactions/`\n",
                "operationId": "get_corporations_corporation_id_wallets_wallet_id_transactions",
                "parameters": [
                    {
                        "description": "An EVE corporation ID",
                        "format": "int32",
                        "in": "path",
                        "name": "corporation_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Wallet ID",
                        "format": "int32",
                        "in": "path",
                        "name": "wallet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Nice Dummy"
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_corporations_corporation_id_wallets_wallet_id_transactions_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_wallets_wallet_id_transactions_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Dummy Endpoint, Please Ignore",
                "tags": [
                    "Wallet",
                    "Dummy"
                ]
            }
        },
        "/markets/prices/": {
            "get": {
                "description": "Return a list of prices\n\n---\n\nAlternate route: `/v1/markets/prices/`\n\nAlternate route: `/legacy/markets/prices/`\n\nAlternate route: `/latest/markets/prices/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_markets_prices",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of prices",
                        "examples": {
                            "application/json": [
                                {
                                    "adjusted_price": 306988.09,
                                    "average_price": 306292.67,
                                    "type_id": 32772
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "adjusted_price": {
                                        "description": "adjusted_price number",
                                        "format": "float",
                                        "title": "get_markets_prices_adjusted_price",
                                        "type": "number"
                                    },
                                    "average_price": {
                                        "description": "average_price number",
                                        "format": "float",
                                        "title": "get_markets_prices_average_price",
                                        "type": "number"
                                    },
                                    "type_id": {
                                        "description": "type_id integer",
                                        "format": "int64",
                                        "title": "get_markets_prices_type_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "type_id"
                                ],
                                "title": "get_markets_prices_200_ok",
                                "type": "object"
                            },
                            "title": "get_markets_prices_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_markets_prices_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_markets_prices_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List market prices",
                "tags": [
                    "Market",
                    "Live"
                ]
            }
        },
        "/markets/{region_id}/history/": {
            "get": {
                "description": "Return a list of historical market statistics for the specified type in a region\n\n---\n\nAlternate route: `/v1/markets/{region_id}/history/`\n\nAlternate route: `/legacy/markets/{region_id}/history/`\n\nAlternate route: `/latest/markets/{region_id}/history/`\n\n\n---\n\nThis route is cached for up to 300 seconds",
                "operationId": "get_markets_region_id_history",
                "parameters": [
                    {
                        "description": "Return statistics in this region",
                        "format": "int64",
                        "in": "path",
                        "name": "region_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Return statistics for this type",
                        "format": "int64",
                        "in": "query",
                        "name": "type_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of historical market statistics",
                        "examples": {
                            "application/json": [
                                {
                                    "average": 5.25,
                                    "date": "2015-05-01",
                                    "highest": 5.27,
                                    "lowest": 5.11,
                                    "order_count": 2267,
                                    "volume": 16276782035
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "average": {
                                        "description": "average number",
                                        "format": "float",
                                        "title": "get_markets_region_id_history_average",
                                        "type": "number"
                                    },
                                    "date": {
                                        "description": "The date of this historical statistic entry",
                                        "format": "date",
                                        "title": "get_markets_region_id_history_date",
                                        "type": "string"
                                    },
                                    "highest": {
                                        "description": "highest number",
                                        "format": "float",
                                        "title": "get_markets_region_id_history_highest",
                                        "type": "number"
                                    },
                                    "lowest": {
                                        "description": "lowest number",
                                        "format": "float",
                                        "title": "get_markets_region_id_history_lowest",
                                        "type": "number"
                                    },
                                    "order_count": {
                                        "description": "Total number of orders happened that day",
                                        "format": "int64",
                                        "title": "get_markets_region_id_history_order_count",
                                        "type": "integer"
                                    },
                                    "volume": {
                                        "description": "Total",
                                        "format": "int64",
                                        "title": "get_markets_region_id_history_volume",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "date",
                                    "order_count",
                                    "volume",
                                    "highest",
                                    "average",
                                    "lowest"
                                ],
                                "title": "get_markets_region_id_history_200_ok",
                                "type": "object"
                            },
                            "title": "get_markets_region_id_history_ok",
                            "type": "array"
                        }
                    },
                    "422": {
                        "description": "Errors in query parameters",
                        "examples": {
                            "application/json": {
                                "error": "123 is not a valid market region\n"
                            }
                        },
                        "schema": {
                            "description": "bad region_id",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_markets_region_id_history_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_markets_region_id_history_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_markets_region_id_history_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_markets_region_id_history_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List historical market statistics in a region",
                "tags": [
                    "Market",
                    "Live"
                ]
            }
        },
        "/markets/{region_id}/orders/": {
            "get": {
                "description": "Return a list of orders in a region\n\n---\n\nAlternate route: `/v1/markets/{region_id}/orders/`\n\nAlternate route: `/legacy/markets/{region_id}/orders/`\n\nAlternate route: `/latest/markets/{region_id}/orders/`\n\n\n---\n\nThis route is cached for up to 300 seconds",
                "operationId": "get_markets_region_id_orders",
                "parameters": [
                    {
                        "description": "Return orders in this region",
                        "format": "int64",
                        "in": "path",
                        "name": "region_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Return orders only for this type",
                        "format": "int64",
                        "in": "query",
                        "name": "type_id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": "all",
                        "description": "Filter buy/sell orders, return all orders by default. If you query without type_id, we always return both buy and sell orders.\n",
                        "enum": [
                            "buy",
                            "sell",
                            "all"
                        ],
                        "in": "query",
                        "name": "order_type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 1,
                        "description": "Which page to query, only used for querying without type_id. Starting at 1\n",
                        "format": "int32",
                        "in": "query",
                        "name": "page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of orders",
                        "examples": {
                            "application/json": [
                                {
                                    "duration": 90,
                                    "is_buy_order": false,
                                    "issued": "2016-09-03T05:12:25Z",
                                    "location_id": 60005599,
                                    "min_volume": 1,
                                    "order_id": 4623824223,
                                    "price": 9.9,
                                    "range": "region",
                                    "type_id": 34,
                                    "volume_remain": 1296000,
                                    "volume_total": 2000000
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "duration": {
                                        "description": "duration integer",
                                        "format": "int32",
                                        "title": "get_markets_region_id_orders_duration",
                                        "type": "integer"
                                    },
                                    "is_buy_order": {
                                        "description": "is_buy_order boolean",
                                        "title": "get_markets_region_id_orders_is_buy_order",
                                        "type": "boolean"
                                    },
                                    "issued": {
                                        "description": "issued string",
                                        "format": "date-time",
                                        "title": "get_markets_region_id_orders_issued",
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "description": "location_id integer",
                                        "format": "int64",
                                        "title": "get_markets_region_id_orders_location_id",
                                        "type": "integer"
                                    },
                                    "min_volume": {
                                        "description": "min_volume integer",
                                        "format": "int64",
                                        "title": "get_markets_region_id_orders_min_volume",
                                        "type": "integer"
                                    },
                                    "order_id": {
                                        "description": "order_id integer",
                                        "format": "int64",
                                        "title": "get_markets_region_id_orders_order_id",
                                        "type": "integer"
                                    },
                                    "price": {
                                        "description": "price number",
                                        "format": "float",
                                        "title": "get_markets_region_id_orders_price",
                                        "type": "number"
                                    },
                                    "range": {
                                        "description": "range string",
                                        "enum": [
                                            "station",
                                            "region",
                                            "solarsystem",
                                            "1",
                                            "2",
                                            "3",
                                            "4",
                                            "5",
                                            "10",
                                            "20",
                                            "30",
                                            "40"
                                        ],
                                        "title": "get_markets_region_id_orders_range",
                                        "type": "string"
                                    },
                                    "type_id": {
                                        "description": "type_id integer",
                                        "format": "int64",
                                        "title": "get_markets_region_id_orders_type_id",
                                        "type": "integer"
                                    },
                                    "volume_remain": {
                                        "description": "volume_remain integer",
                                        "format": "int64",
                                        "title": "get_markets_region_id_orders_volume_remain",
                                        "type": "integer"
                                    },
                                    "volume_total": {
                                        "description": "volume_total integer",
                                        "format": "int64",
                                        "title": "get_markets_region_id_orders_volume_total",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "order_id",
                                    "type_id",
                                    "location_id",
                                    "volume_total",
                                    "volume_remain",
                                    "min_volume",
                                    "price",
                                    "is_buy_order",
                                    "duration",
                                    "issued",
                                    "range"
                                ],
                                "title": "get_markets_region_id_orders_200_ok",
                                "type": "object"
                            },
                            "title": "get_markets_region_id_orders_ok",
                            "type": "array"
                        }
                    },
                    "422": {
                        "description": "Errors in query parameters",
                        "examples": {
                            "application/json": {
                                "error": "123 is not a valid market region\n"
                            }
                        },
                        "schema": {
                            "description": "bad region_id",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_markets_region_id_orders_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_markets_region_id_orders_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_markets_region_id_orders_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_markets_region_id_orders_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List orders in a region",
                "tags": [
                    "Market",
                    "Live"
                ]
            }
        },
        "/universe/names/": {
            "post": {
                "description": "Resolve a set of IDs to names and categories. Supported ID's for resolving are: Characters, Corporations, Alliances, Stations, Solar Systems, Constellations, Regions, Types.\n\n---\n\nAlternate route: `/v2/universe/names/`\n",
                "operationId": "post_universe_names",
                "parameters": [
                    {
                        "description": "The ids to resolve",
                        "in": "body",
                        "name": "ids",
                        "required": true,
                        "schema": {
                            "description": "ids array",
                            "example": [
                                95465499,
                                30000142
                            ],
                            "items": {
                                "description": "id integer",
                                "format": "int32",
                                "title": "post_universe_names_id",
                                "type": "integer"
                            },
                            "maxItems": 1000,
                            "minItems": 1,
                            "title": "post_universe_names_ids",
                            "type": "array",
                            "uniqueItems": true
                        }
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of id/name associations for a set of ID's. ID's that cannot be resolved are not returned.",
                        "examples": {
                            "application/json": [
                                {
                                    "category": "character",
                                    "id": 95465499,
                                    "name": "CCP Bartender"
                                },
                                {
                                    "category": "solar_system",
                                    "id": 30000142,
                                    "name": "Jita"
                                }
                            ]
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "category": {
                                        "description": "category string",
                                        "enum": [
                                            "alliance",
                                            "character",
                                            "constellation",
                                            "corporation",
                                            "inventory_type",
                                            "region",
                                            "solar_system",
                                            "station"
                                        ],
                                        "title": "post_universe_names_category",
                                        "type": "string"
                                    },
                                    "id": {
                                        "description": "id integer",
                                        "format": "int32",
                                        "title": "post_universe_names_id",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "name string",
                                        "title": "post_universe_names_name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id",
                                    "name",
                                    "category"
                                ],
                                "title": "post_universe_names_200_ok",
                                "type": "object"
                            },
                            "title": "post_universe_names_ok",
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "no valid IDs found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "post_universe_names_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "post_universe_names_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_universe_names_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_universe_names_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get names and categories for a set of ID's",
                "tags": [
                    "Live",
                    "Universe"
                ]
            }
        },
        "/universe/planets/{planet_id}/": {
            "get": {
                "description": "Information on a planet\n\n---\n\nAlternate route: `/v1/universe/planets/{planet_id}/`\n\nAlternate route: `/legacy/universe/planets/{planet_id}/`\n\nAlternate route: `/latest/universe/planets/{planet_id}/`\n",
                "operationId": "get_universe_planets_planet_id",
                "parameters": [
                    {
                        "description": "An Eve planet ID",
                        "format": "int32",
                        "in": "path",
                        "name": "planet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data about a planet",
                        "examples": {
                            "application/json": {
                                "planet_name": "Jita IV"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "planet_name": {
                                    "description": "the full name of the station",
                                    "title": "get_universe_planets_planet_id_planet_name",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_planets_planet_id_ok",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_planets_planet_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_planets_planet_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get planet information",
                "tags": [
                    "Dummy",
                    "Universe"
                ]
            }
        },
        "/universe/stations/{station_id}/": {
            "get": {
                "description": "Public information on stations\n\n---\n\nAlternate route: `/v1/universe/stations/{station_id}/`\n\nAlternate route: `/legacy/universe/stations/{station_id}/`\n\nAlternate route: `/latest/universe/stations/{station_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_stations_station_id",
                "parameters": [
                    {
                        "description": "An Eve station ID",
                        "format": "int32",
                        "in": "path",
                        "name": "station_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data about a station",
                        "examples": {
                            "application/json": {
                                "solar_system_id": 30000142,
                                "station_name": "Jita IV Moon IV - Caldari Navy Assembly Plant"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "solar_system_id": {
                                    "description": "solar_system_id integer",
                                    "format": "int32",
                                    "title": "get_universe_stations_station_id_solar_system_id",
                                    "type": "integer"
                                },
                                "station_name": {
                                    "description": "the full name of the station",
                                    "title": "get_universe_stations_station_id_station_name",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_stations_station_id_ok",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_stations_station_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_stations_station_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get station information",
                "tags": [
                    "Live",
                    "Universe"
                ]
            }
        },
        "/universe/structures/": {
            "get": {
                "description": "List all public structures\n\n---\n\nAlternate route: `/v1/universe/structures/`\n\nAlternate route: `/latest/universe/structures/`\n\nAlternate route: `/legacy/universe/structures/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_structures",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of public structure IDs",
                        "examples": {
                            "application/json": [
                                1000000017013,
                                1000000025062
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int64",
                                "minimum": 0,
                                "title": "get_universe_structures_200_ok",
                                "type": "integer",
                                "uniqueItems": true
                            },
                            "title": "get_universe_structures_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_structures_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_structures_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List all public structures",
                "tags": [
                    "Live",
                    "Universe"
                ]
            }
        },
        "/universe/structures/{structure_id}/": {
            "get": {
                "description": "Returns information on requested structure, if you are on the ACL. Otherwise, returns \"Forbidden\" for all inputs.\n\n---\n\nAlternate route: `/v1/universe/structures/{structure_id}/`\n\nAlternate route: `/legacy/universe/structures/{structure_id}/`\n\nAlternate route: `/latest/universe/structures/{structure_id}/`\n",
                "operationId": "get_universe_structures_structure_id",
                "parameters": [
                    {
                        "description": "An Eve structure ID",
                        "format": "int64",
                        "in": "path",
                        "name": "structure_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data about a structure",
                        "examples": {
                            "application/json": {
                                "name": "V-3YG7 VI - The Capital",
                                "solar_system_id": 30000142
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "name": {
                                    "description": "The full name of the structure",
                                    "title": "get_universe_structures_structure_id_name",
                                    "type": "string"
                                },
                                "position": {
                                    "description": "Coordinates of the structure in Cartesian space relative to the Sun, in metres.\n",
                                    "properties": {
                                        "x": {
                                            "description": "x number",
                                            "format": "float",
                                            "title": "get_universe_structures_structure_id_x",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "y number",
                                            "format": "float",
                                            "title": "get_universe_structures_structure_id_y",
                                            "type": "number"
                                        },
                                        "z": {
                                            "description": "z number",
                                            "format": "float",
                                            "title": "get_universe_structures_structure_id_z",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y",
                                        "z"
                                    ],
                                    "title": "get_universe_structures_structure_id_position",
                                    "type": "object"
                                },
                                "solar_system_id": {
                                    "description": "solar_system_id integer",
                                    "format": "int32",
                                    "title": "get_universe_structures_structure_id_solar_system_id",
                                    "type": "integer"
                                },
                                "type_id": {
                                    "description": "type_id integer",
                                    "format": "int32",
                                    "title": "get_universe_structures_structure_id_type_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "name",
                                "solar_system_id"
                            ],
                            "title": "get_universe_structures_structure_id_ok",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-universe.read_structures.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_universe_structures_structure_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_structures_structure_id_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Structure not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_universe_structures_structure_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_structures_structure_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_structures_structure_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_structures_structure_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-universe.read_structures.v1"
                        ]
                    }
                ],
                "summary": "Get structure information",
                "tags": [
                    "Live",
                    "Universe"
                ]
            }
        },
        "/universe/systems/{system_id}/": {
            "get": {
                "description": "Information on solar systems\n\n---\n\nAlternate route: `/v1/universe/systems/{system_id}/`\n\nAlternate route: `/legacy/universe/systems/{system_id}/`\n\nAlternate route: `/latest/universe/systems/{system_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_systems_system_id",
                "parameters": [
                    {
                        "description": "An Eve solar system ID",
                        "format": "int32",
                        "in": "path",
                        "name": "system_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data about a solar system",
                        "examples": {
                            "application/json": {
                                "solar_system_name": "Jita"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "solar_system_name": {
                                    "description": "the full name of the system",
                                    "title": "get_universe_systems_system_id_solar_system_name",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_systems_system_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "System not found",
                        "examples": {
                            "application/json": {
                                "error": "System not found"
                            }
                        },
                        "schema": {
                            "description": "System not found",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_universe_systems_system_id_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_systems_system_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_systems_system_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_systems_system_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get solar system information",
                "tags": [
                    "Live",
                    "Universe"
                ]
            }
        },
        "/universe/types/{type_id}/": {
            "get": {
                "description": "Get information on a type\n\n---\n\nAlternate route: `/v1/universe/types/{type_id}/`\n\nAlternate route: `/legacy/universe/types/{type_id}/`\n\nAlternate route: `/latest/universe/types/{type_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_types_type_id",
                "parameters": [
                    {
                        "description": "An Eve item type ID",
                        "format": "int32",
                        "in": "path",
                        "name": "type_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data about a type",
                        "examples": {
                            "application/json": {
                                "category_id": 6,
                                "graphic_id": 46,
                                "group_id": 25,
                                "type_description": "The Rifter is a very powerful combat frigate and can easily tackle the best frigates out there. It has gone through many radical design phases since its inauguration during the Minmatar Rebellion. The Rifter has a wide variety of offensive capabilities, making it an unpredictable and deadly adversary.",
                                "type_name": "Rifter"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "category_id": {
                                    "description": "category_id integer",
                                    "format": "int32",
                                    "title": "get_universe_types_type_id_category_id",
                                    "type": "integer"
                                },
                                "graphic_id": {
                                    "description": "graphic_id integer",
                                    "format": "int32",
                                    "title": "get_universe_types_type_id_graphic_id",
                                    "type": "integer"
                                },
                                "group_id": {
                                    "description": "group_id integer",
                                    "format": "int32",
                                    "title": "get_universe_types_type_id_group_id",
                                    "type": "integer"
                                },
                                "icon_id": {
                                    "description": "icon_id integer",
                                    "format": "int32",
                                    "title": "get_universe_types_type_id_icon_id",
                                    "type": "integer"
                                },
                                "type_description": {
                                    "description": "type_description string",
                                    "title": "get_universe_types_type_id_type_description",
                                    "type": "string"
                                },
                                "type_name": {
                                    "description": "type_name string",
                                    "title": "get_universe_types_type_id_type_name",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "type_name",
                                "type_description",
                                "group_id",
                                "category_id"
                            ],
                            "title": "get_universe_types_type_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Type not found",
                        "examples": {
                            "application/json": {
                                "error": "Type not found"
                            }
                        },
                        "schema": {
                            "description": "Type not found",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_universe_types_type_id_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_types_type_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_types_type_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_types_type_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get type information",
                "tags": [
                    "Live",
                    "Universe"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "evesso": {
            "authorizationUrl": "https://login.eveonline.com/oauth/authorize",
            "flow": "implicit",
            "scopes": {
                "esi-calendar.read_calendar_events.v1": "EVE SSO scope esi-calendar.read_calendar_events.v1",
                "esi-calendar.respond_calendar_events.v1": "EVE SSO scope esi-calendar.respond_calendar_events.v1",
                "esi-characters.read_contacts.v1": "EVE SSO scope esi-characters.read_contacts.v1",
                "esi-clones.read_clones.v1": "EVE SSO scope esi-clones.read_clones.v1",
                "esi-mail.organize_mail.v1": "EVE SSO scope esi-mail.organize_mail.v1",
                "esi-mail.read_mail.v1": "EVE SSO scope esi-mail.read_mail.v1",
                "esi-mail.send_mail.v1": "EVE SSO scope esi-mail.send_mail.v1",
                "esi-skills.read_skillqueue.v1": "EVE SSO scope esi-skills.read_skillqueue.v1",
                "esi-skills.read_skills.v1": "EVE SSO scope esi-skills.read_skills.v1",
                "esi-universe.read_structures.v1": "EVE SSO scope esi-universe.read_structures.v1",
                "esi-wallet.read_character_wallet.v1": "EVE SSO scope esi-wallet.read_character_wallet.v1"
            },
            "type": "oauth2"
        }
    },
    "swagger": "2.0"
}
