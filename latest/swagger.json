{
    "basePath": "/latest",
    "host": "esi.tech.ccp.is",
    "info": {
        "description": "An OpenAPI for EVE Online",
        "title": "EVE Swagger Interface",
        "version": "0.2.6.dev1"
    },
    "paths": {
        "/characters/names/": {
            "get": {
                "description": "Resolve a set of character IDs to character names\n\n---\n\nAlternate route: `/v1/characters/names/`\n\nAlternate route: `/legacy/characters/names/`\n\nAlternate route: `/dev/characters/names/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_names",
                "parameters": [
                    {
                        "description": "A comma separated list of character IDs",
                        "in": "query",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "minItems": 1,
                        "name": "character_ids",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of id/name associations",
                        "examples": {
                            "application/json": [
                                {
                                    "character_id": 95465499,
                                    "character_name": "CCP Bartender"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "character_id": {
                                        "description": "character_id integer",
                                        "format": "int64",
                                        "title": "get_characters_names_character_id",
                                        "type": "integer"
                                    },
                                    "character_name": {
                                        "description": "character_name string",
                                        "title": "get_characters_names_character_name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "character_id",
                                    "character_name"
                                ],
                                "title": "get_characters_names_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_names_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_names_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_names_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get character names",
                "tags": [
                    "Live",
                    "Character"
                ]
            }
        },
        "/characters/{character_id}/": {
            "get": {
                "description": "Public information about a character\n\n---\n\nAlternate route: `/v3/characters/{character_id}/`\n\nAlternate route: `/legacy/characters/{character_id}/`\n\nAlternate route: `/dev/characters/{character_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data for the given character",
                        "examples": {
                            "application/json": {
                                "ancestry_id": 19,
                                "birthday": "2015-03-24T11:37:00Z",
                                "bloodline_id": 3,
                                "corporation_id": 109299958,
                                "description": "",
                                "gender": "male",
                                "name": "CCP Bartender",
                                "race_id": 2
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "ancestry_id": {
                                    "description": "ancestry_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_ancestry_id",
                                    "type": "integer"
                                },
                                "birthday": {
                                    "description": "Creation date of the character",
                                    "format": "date-time",
                                    "title": "get_characters_character_id_birthday",
                                    "type": "string"
                                },
                                "bloodline_id": {
                                    "description": "bloodline_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_bloodline_id",
                                    "type": "integer"
                                },
                                "corporation_id": {
                                    "description": "The character's corporation ID",
                                    "format": "int32",
                                    "title": "get_characters_character_id_corporation_id",
                                    "type": "integer"
                                },
                                "description": {
                                    "description": "description string",
                                    "title": "get_characters_character_id_description",
                                    "type": "string"
                                },
                                "gender": {
                                    "description": "gender string",
                                    "enum": [
                                        "female",
                                        "male"
                                    ],
                                    "title": "get_characters_character_id_gender",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The name of the character",
                                    "title": "get_characters_character_id_name",
                                    "type": "string"
                                },
                                "race_id": {
                                    "description": "race_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_race_id",
                                    "type": "integer"
                                },
                                "security_status": {
                                    "description": "security_status number",
                                    "format": "float",
                                    "maximum": 10,
                                    "minimum": -10,
                                    "title": "get_characters_character_id_security_status",
                                    "type": "number"
                                }
                            },
                            "required": [
                                "corporation_id",
                                "birthday",
                                "name",
                                "gender",
                                "race_id",
                                "description",
                                "bloodline_id",
                                "ancestry_id"
                            ],
                            "title": "get_characters_character_id_ok",
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Is not a character ID",
                        "examples": {
                            "application/json": {
                                "error": "98000001 is not a character ID"
                            }
                        },
                        "schema": {
                            "description": "Is not a character ID",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_characters_character_id_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get character's public information",
                "tags": [
                    "Live",
                    "Character"
                ]
            }
        },
        "/characters/{character_id}/corporationhistory/": {
            "get": {
                "description": "Get a list of all the corporations a character has been a member of\n\n---\n\nAlternate route: `/v1/characters/{character_id}/corporationhistory/`\n\nAlternate route: `/legacy/characters/{character_id}/corporationhistory/`\n\nAlternate route: `/dev/characters/{character_id}/corporationhistory/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_corporationhistory",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Corporation history for the given character",
                        "examples": {
                            "application/json": [
                                {
                                    "corporation_id": 90000001,
                                    "is_deleted": false,
                                    "record_id": 500,
                                    "start_date": "2016-06-26T20:00:00Z"
                                },
                                {
                                    "corporation_id": 90000002,
                                    "is_deleted": false,
                                    "record_id": 501,
                                    "start_date": "2016-07-26T20:00:00Z"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "corporation_id": {
                                        "description": "corporation_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_corporationhistory_corporation_id",
                                        "type": "integer"
                                    },
                                    "is_deleted": {
                                        "description": "True if the corporation has been deleted",
                                        "title": "get_characters_character_id_corporationhistory_is_deleted",
                                        "type": "boolean"
                                    },
                                    "record_id": {
                                        "description": "An incrementing ID that can be used to canonically establish order of records in cases where dates may be ambiguous",
                                        "format": "int32",
                                        "title": "get_characters_character_id_corporationhistory_record_id",
                                        "type": "integer"
                                    },
                                    "start_date": {
                                        "description": "start_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_corporationhistory_start_date",
                                        "type": "string"
                                    }
                                },
                                "title": "get_characters_character_id_corporationhistory_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_corporationhistory_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_corporationhistory_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_corporationhistory_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get corporation history",
                "tags": [
                    "Live",
                    "Character"
                ]
            }
        },
        "/characters/{character_id}/cspa/": {
            "post": {
                "description": "Takes a source character ID in the url and a set of target character ID's in the body, returns a CSPA charge cost\n\n---\n\nAlternate route: `/v3/characters/{character_id}/cspa/`\n\nAlternate route: `/legacy/characters/{character_id}/cspa/`\n\nAlternate route: `/dev/characters/{character_id}/cspa/`\n",
                "operationId": "post_characters_character_id_cspa",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The target characters to calculate the charge for",
                        "in": "body",
                        "name": "characters",
                        "required": true,
                        "schema": {
                            "description": "characters schema",
                            "properties": {
                                "characters": {
                                    "description": "characters array",
                                    "items": {
                                        "description": "character integer",
                                        "format": "int32",
                                        "title": "post_characters_character_id_cspa_character",
                                        "type": "integer"
                                    },
                                    "minItems": 1,
                                    "title": "post_characters_character_id_cspa_characters",
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": [
                                "characters"
                            ],
                            "title": "post_characters_character_id_cspa_characters"
                        }
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Aggregate cost of sending a mail from the source character to the target characters, in ISK hundredths",
                        "examples": {
                            "application/json": {
                                "cost": 295000
                            }
                        },
                        "schema": {
                            "description": "201 created object",
                            "properties": {
                                "cost": {
                                    "description": "cost integer",
                                    "format": "int64",
                                    "title": "post_characters_character_id_cspa_cost",
                                    "type": "integer"
                                }
                            },
                            "title": "post_characters_character_id_cspa_created",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.read_contacts.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_characters_character_id_cspa_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_cspa_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_characters_character_id_cspa_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_cspa_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_contacts.v1"
                        ]
                    }
                ],
                "summary": "Calculate a CSPA charge cost",
                "tags": [
                    "Live",
                    "Character"
                ]
            }
        },
        "/characters/{character_id}/portrait/": {
            "get": {
                "description": "Get portrait urls for a character\n\n---\n\nAlternate route: `/v2/characters/{character_id}/portrait/`\n\nAlternate route: `/dev/characters/{character_id}/portrait/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_portrait",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data for the given character",
                        "examples": {
                            "application/json": {
                                "px128x128": "https://imageserver.eveonline.com/Character/95465499_128.jpg",
                                "px256x256": "https://imageserver.eveonline.com/Character/95465499_256.jpg",
                                "px512x512": "https://imageserver.eveonline.com/Character/95465499_512.jpg",
                                "px64x64": "https://imageserver.eveonline.com/Character/95465499_64.jpg"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "px128x128": {
                                    "description": "px128x128 string",
                                    "title": "get_characters_character_id_portrait_px128x128",
                                    "type": "string"
                                },
                                "px256x256": {
                                    "description": "px256x256 string",
                                    "title": "get_characters_character_id_portrait_px256x256",
                                    "type": "string"
                                },
                                "px512x512": {
                                    "description": "px512x512 string",
                                    "title": "get_characters_character_id_portrait_px512x512",
                                    "type": "string"
                                },
                                "px64x64": {
                                    "description": "px64x64 string",
                                    "title": "get_characters_character_id_portrait_px64x64",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_portrait_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "No image server for this datasource",
                        "examples": {
                            "application/json": {
                                "error": "No image server for this datasource"
                            }
                        },
                        "schema": {
                            "description": "No image server for this datasource",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_characters_character_id_portrait_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_portrait_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_portrait_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_portrait_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get character portraits",
                "tags": [
                    "Live",
                    "Character"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "evesso": {
            "authorizationUrl": "https://login.eveonline.com/oauth/authorize",
            "flow": "implicit",
            "scopes": {
                "esi-characters.read_contacts.v1": "EVE SSO scope esi-characters.read_contacts.v1"
            },
            "type": "oauth2"
        }
    },
    "swagger": "2.0"
}
