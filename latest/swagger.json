{
    "basePath": "/latest",
    "host": "esi.tech.ccp.is",
    "info": {
        "description": "An OpenAPI for EVE Online",
        "title": "EVE Swagger Interface",
        "version": "0.2.6.dev1"
    },
    "paths": {
        "/characters/names/": {
            "get": {
                "description": "Resolve a set of character IDs to character names\n\n---\n\nAlternate route: `/v1/characters/names/`\n\nAlternate route: `/legacy/characters/names/`\n\nAlternate route: `/dev/characters/names/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_names",
                "parameters": [
                    {
                        "description": "A comma separated list of character IDs",
                        "in": "query",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "minItems": 1,
                        "name": "character_ids",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of id/name associations",
                        "examples": {
                            "application/json": [
                                {
                                    "character_id": 95465499,
                                    "character_name": "CCP Bartender"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "character_id": {
                                        "description": "character_id integer",
                                        "format": "int64",
                                        "title": "get_characters_names_character_id",
                                        "type": "integer"
                                    },
                                    "character_name": {
                                        "description": "character_name string",
                                        "title": "get_characters_names_character_name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "character_id",
                                    "character_name"
                                ],
                                "title": "get_characters_names_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_names_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_names_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_names_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get character names",
                "tags": [
                    "Live",
                    "Character"
                ]
            }
        },
        "/characters/{character_id}/": {
            "get": {
                "description": "Public information about a character\n\n---\n\nAlternate route: `/v3/characters/{character_id}/`\n\nAlternate route: `/legacy/characters/{character_id}/`\n\nAlternate route: `/dev/characters/{character_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data for the given character",
                        "examples": {
                            "application/json": {
                                "ancestry_id": 19,
                                "birthday": "2015-03-24T11:37:00Z",
                                "bloodline_id": 3,
                                "corporation_id": 109299958,
                                "description": "",
                                "gender": "male",
                                "name": "CCP Bartender",
                                "race_id": 2
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "ancestry_id": {
                                    "description": "ancestry_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_ancestry_id",
                                    "type": "integer"
                                },
                                "birthday": {
                                    "description": "Creation date of the character",
                                    "format": "date-time",
                                    "title": "get_characters_character_id_birthday",
                                    "type": "string"
                                },
                                "bloodline_id": {
                                    "description": "bloodline_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_bloodline_id",
                                    "type": "integer"
                                },
                                "corporation_id": {
                                    "description": "The character's corporation ID",
                                    "format": "int32",
                                    "title": "get_characters_character_id_corporation_id",
                                    "type": "integer"
                                },
                                "description": {
                                    "description": "description string",
                                    "title": "get_characters_character_id_description",
                                    "type": "string"
                                },
                                "gender": {
                                    "description": "gender string",
                                    "enum": [
                                        "female",
                                        "male"
                                    ],
                                    "title": "get_characters_character_id_gender",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The name of the character",
                                    "title": "get_characters_character_id_name",
                                    "type": "string"
                                },
                                "race_id": {
                                    "description": "race_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_race_id",
                                    "type": "integer"
                                },
                                "security_status": {
                                    "description": "security_status number",
                                    "format": "float",
                                    "maximum": 10,
                                    "minimum": -10,
                                    "title": "get_characters_character_id_security_status",
                                    "type": "number"
                                }
                            },
                            "required": [
                                "corporation_id",
                                "birthday",
                                "name",
                                "gender",
                                "race_id",
                                "description",
                                "bloodline_id",
                                "ancestry_id"
                            ],
                            "title": "get_characters_character_id_ok",
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Is not a character ID",
                        "examples": {
                            "application/json": {
                                "error": "98000001 is not a character ID"
                            }
                        },
                        "schema": {
                            "description": "Is not a character ID",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_characters_character_id_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get character's public information",
                "tags": [
                    "Live",
                    "Character"
                ]
            }
        },
        "/characters/{character_id}/clones/": {
            "get": {
                "description": "A list of the character's clones\n\n---\n\nAlternate route: `/v2/characters/{character_id}/clones/`\n\nAlternate route: `/dev/characters/{character_id}/clones/`\n\n\n---\n\nThis route is cached for up to 120 seconds",
                "operationId": "get_characters_character_id_clones",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Clone information for the given character",
                        "examples": {
                            "application/json": {
                                "home_location": {
                                    "location_id": 1021348135816,
                                    "location_type": "structure"
                                },
                                "jump_clones": [
                                    {
                                        "implants": [
                                            22118
                                        ],
                                        "location_id": 60003463,
                                        "location_type": "station"
                                    },
                                    {
                                        "implants": [],
                                        "location_id": 1021348135816,
                                        "location_type": "structure"
                                    }
                                ]
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "home_location": {
                                    "description": "home_location object",
                                    "properties": {
                                        "location_id": {
                                            "description": "location_id integer",
                                            "format": "int64",
                                            "title": "get_characters_character_id_clones_location_id",
                                            "type": "integer"
                                        },
                                        "location_type": {
                                            "description": "location_type string",
                                            "enum": [
                                                "station",
                                                "structure"
                                            ],
                                            "title": "get_characters_character_id_clones_location_type",
                                            "type": "string"
                                        }
                                    },
                                    "title": "get_characters_character_id_clones_home_location",
                                    "type": "object"
                                },
                                "jump_clones": {
                                    "description": "jump_clones array",
                                    "items": {
                                        "description": "jump_clone object",
                                        "properties": {
                                            "implants": {
                                                "description": "implants array",
                                                "items": {
                                                    "description": "implant integer",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_clones_implant",
                                                    "type": "integer"
                                                },
                                                "title": "get_characters_character_id_clones_implants",
                                                "type": "array"
                                            },
                                            "location_id": {
                                                "description": "location_id integer",
                                                "format": "int64",
                                                "title": "get_characters_character_id_clones_location_id",
                                                "type": "integer"
                                            },
                                            "location_type": {
                                                "description": "location_type string",
                                                "enum": [
                                                    "station",
                                                    "structure"
                                                ],
                                                "title": "get_characters_character_id_clones_location_type",
                                                "type": "string"
                                            }
                                        },
                                        "title": "get_characters_character_id_clones_jump_clone",
                                        "type": "object"
                                    },
                                    "title": "get_characters_character_id_clones_jump_clones",
                                    "type": "array"
                                },
                                "last_jump_date": {
                                    "description": "last_jump_date string",
                                    "format": "date-time",
                                    "title": "get_characters_character_id_clones_last_jump_date",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "jump_clones"
                            ],
                            "title": "get_characters_character_id_clones_ok",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-clones.read_clones.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_clones_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_clones_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_clones_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_clones_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-clones.read_clones.v1"
                        ]
                    }
                ],
                "summary": "Get clones",
                "tags": [
                    "Live",
                    "Clones"
                ]
            }
        },
        "/characters/{character_id}/corporationhistory/": {
            "get": {
                "description": "Get a list of all the corporations a character has been a member of\n\n---\n\nAlternate route: `/v1/characters/{character_id}/corporationhistory/`\n\nAlternate route: `/legacy/characters/{character_id}/corporationhistory/`\n\nAlternate route: `/dev/characters/{character_id}/corporationhistory/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_corporationhistory",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Corporation history for the given character",
                        "examples": {
                            "application/json": [
                                {
                                    "corporation_id": 90000001,
                                    "is_deleted": false,
                                    "record_id": 500,
                                    "start_date": "2016-06-26T20:00:00Z"
                                },
                                {
                                    "corporation_id": 90000002,
                                    "is_deleted": false,
                                    "record_id": 501,
                                    "start_date": "2016-07-26T20:00:00Z"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "corporation_id": {
                                        "description": "corporation_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_corporationhistory_corporation_id",
                                        "type": "integer"
                                    },
                                    "is_deleted": {
                                        "description": "True if the corporation has been deleted",
                                        "title": "get_characters_character_id_corporationhistory_is_deleted",
                                        "type": "boolean"
                                    },
                                    "record_id": {
                                        "description": "An incrementing ID that can be used to canonically establish order of records in cases where dates may be ambiguous",
                                        "format": "int32",
                                        "title": "get_characters_character_id_corporationhistory_record_id",
                                        "type": "integer"
                                    },
                                    "start_date": {
                                        "description": "start_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_corporationhistory_start_date",
                                        "type": "string"
                                    }
                                },
                                "title": "get_characters_character_id_corporationhistory_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_corporationhistory_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_corporationhistory_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_corporationhistory_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get corporation history",
                "tags": [
                    "Live",
                    "Character"
                ]
            }
        },
        "/characters/{character_id}/cspa/": {
            "post": {
                "description": "Takes a source character ID in the url and a set of target character ID's in the body, returns a CSPA charge cost\n\n---\n\nAlternate route: `/v3/characters/{character_id}/cspa/`\n\nAlternate route: `/legacy/characters/{character_id}/cspa/`\n\nAlternate route: `/dev/characters/{character_id}/cspa/`\n",
                "operationId": "post_characters_character_id_cspa",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The target characters to calculate the charge for",
                        "in": "body",
                        "name": "characters",
                        "required": true,
                        "schema": {
                            "description": "characters schema",
                            "properties": {
                                "characters": {
                                    "description": "characters array",
                                    "items": {
                                        "description": "character integer",
                                        "format": "int32",
                                        "title": "post_characters_character_id_cspa_character",
                                        "type": "integer"
                                    },
                                    "minItems": 1,
                                    "title": "post_characters_character_id_cspa_characters",
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": [
                                "characters"
                            ],
                            "title": "post_characters_character_id_cspa_characters"
                        }
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Aggregate cost of sending a mail from the source character to the target characters, in ISK hundredths",
                        "examples": {
                            "application/json": {
                                "cost": 295000
                            }
                        },
                        "schema": {
                            "description": "201 created object",
                            "properties": {
                                "cost": {
                                    "description": "cost integer",
                                    "format": "int64",
                                    "title": "post_characters_character_id_cspa_cost",
                                    "type": "integer"
                                }
                            },
                            "title": "post_characters_character_id_cspa_created",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.read_contacts.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_characters_character_id_cspa_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_cspa_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_characters_character_id_cspa_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_cspa_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_contacts.v1"
                        ]
                    }
                ],
                "summary": "Calculate a CSPA charge cost",
                "tags": [
                    "Live",
                    "Character"
                ]
            }
        },
        "/characters/{character_id}/portrait/": {
            "get": {
                "description": "Get portrait urls for a character\n\n---\n\nAlternate route: `/v2/characters/{character_id}/portrait/`\n\nAlternate route: `/dev/characters/{character_id}/portrait/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_portrait",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data for the given character",
                        "examples": {
                            "application/json": {
                                "px128x128": "https://imageserver.eveonline.com/Character/95465499_128.jpg",
                                "px256x256": "https://imageserver.eveonline.com/Character/95465499_256.jpg",
                                "px512x512": "https://imageserver.eveonline.com/Character/95465499_512.jpg",
                                "px64x64": "https://imageserver.eveonline.com/Character/95465499_64.jpg"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "px128x128": {
                                    "description": "px128x128 string",
                                    "title": "get_characters_character_id_portrait_px128x128",
                                    "type": "string"
                                },
                                "px256x256": {
                                    "description": "px256x256 string",
                                    "title": "get_characters_character_id_portrait_px256x256",
                                    "type": "string"
                                },
                                "px512x512": {
                                    "description": "px512x512 string",
                                    "title": "get_characters_character_id_portrait_px512x512",
                                    "type": "string"
                                },
                                "px64x64": {
                                    "description": "px64x64 string",
                                    "title": "get_characters_character_id_portrait_px64x64",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_portrait_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "No image server for this datasource",
                        "examples": {
                            "application/json": {
                                "error": "No image server for this datasource"
                            }
                        },
                        "schema": {
                            "description": "No image server for this datasource",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_characters_character_id_portrait_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_portrait_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_portrait_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_portrait_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get character portraits",
                "tags": [
                    "Live",
                    "Character"
                ]
            }
        },
        "/characters/{character_id}/wallets/": {
            "get": {
                "description": "List your wallets and their balances. Characters typically have only one wallet, with wallet_id 1000 being the master wallet.\n\n---\n\nAlternate route: `/v1/characters/{character_id}/wallets/`\n\nAlternate route: `/legacy/characters/{character_id}/wallets/`\n\nAlternate route: `/dev/characters/{character_id}/wallets/`\n\n\n---\n\nThis route is cached for up to 120 seconds",
                "operationId": "get_characters_character_id_wallets",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wallet data for selected user",
                        "examples": {
                            "application/json": [
                                {
                                    "balance": 295000,
                                    "wallet_id": 1000
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "balance": {
                                        "description": "Wallet's balance in ISK hundredths.",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_balance",
                                        "type": "integer"
                                    },
                                    "wallet_id": {
                                        "description": "wallet_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_wallet_id",
                                        "type": "integer"
                                    }
                                },
                                "title": "get_characters_character_id_wallets_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_wallets_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-wallet.read_character_wallet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_wallets_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_wallets_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_wallets_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_wallets_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-wallet.read_character_wallet.v1"
                        ]
                    }
                ],
                "summary": "List wallets and balances",
                "tags": [
                    "Live",
                    "Wallet"
                ]
            }
        },
        "/characters/{character_id}/wallets/journal/": {
            "get": {
                "description": "Returns the most recent 50 entries for the characters wallet journal. Optionally, takes an argument with a reference ID, and returns the prior 50 entries from the journal.\n\n---\n\nAlternate route: `/v1/characters/{character_id}/wallets/journal/`\n\nAlternate route: `/legacy/characters/{character_id}/wallets/journal/`\n\nAlternate route: `/dev/characters/{character_id}/wallets/journal/`\n",
                "operationId": "get_characters_character_id_wallets_journal",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "A journal reference ID to paginate from",
                        "format": "int64",
                        "in": "query",
                        "name": "last_seen_id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Journal entries",
                        "examples": {
                            "application/json": [
                                {
                                    "ref_id": 1234567890,
                                    "ref_type": "foo",
                                    "transaction_date": "2016-10-24T09:00:00Z"
                                }
                            ]
                        },
                        "schema": {
                            "description": "wallet transactions",
                            "items": {
                                "description": "transaction",
                                "properties": {
                                    "argument_name": {
                                        "description": "argument_name string",
                                        "title": "get_characters_character_id_wallets_journal_argument_name",
                                        "type": "string"
                                    },
                                    "argument_value": {
                                        "description": "argument_value integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_journal_argument_value",
                                        "type": "integer"
                                    },
                                    "first_party_id": {
                                        "description": "first_party_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_journal_first_party_id",
                                        "type": "integer"
                                    },
                                    "first_party_type": {
                                        "description": "first_party_type string",
                                        "enum": [
                                            "character",
                                            "corporation",
                                            "alliance"
                                        ],
                                        "title": "get_characters_character_id_wallets_journal_first_party_type",
                                        "type": "string"
                                    },
                                    "post_transaction_balance": {
                                        "description": "post_transaction_balance integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_journal_post_transaction_balance",
                                        "type": "integer"
                                    },
                                    "reason": {
                                        "description": "reason string",
                                        "title": "get_characters_character_id_wallets_journal_reason",
                                        "type": "string"
                                    },
                                    "ref_id": {
                                        "description": "ref_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_journal_ref_id",
                                        "type": "integer"
                                    },
                                    "ref_type": {
                                        "description": "ref_type string",
                                        "title": "get_characters_character_id_wallets_journal_ref_type",
                                        "type": "string"
                                    },
                                    "second_party_id": {
                                        "description": "second_party_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_journal_second_party_id",
                                        "type": "integer"
                                    },
                                    "second_party_type": {
                                        "description": "second_party_type string",
                                        "enum": [
                                            "character",
                                            "corporation",
                                            "alliance"
                                        ],
                                        "title": "get_characters_character_id_wallets_journal_second_party_type",
                                        "type": "string"
                                    },
                                    "tax_amount": {
                                        "description": "tax_amount integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_journal_tax_amount",
                                        "type": "integer"
                                    },
                                    "tax_reciever_id": {
                                        "description": "tax_reciever_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_journal_tax_reciever_id",
                                        "type": "integer"
                                    },
                                    "transaction_amount": {
                                        "description": "Positive if transferred to first party, negative if transferred to second party",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_journal_transaction_amount",
                                        "type": "integer"
                                    },
                                    "transaction_date": {
                                        "description": "transaction_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_wallets_journal_transaction_date",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "transaction_date",
                                    "ref_id",
                                    "ref_type"
                                ],
                                "title": "get_characters_character_id_wallets_journal_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_wallets_journal_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-wallet.read_character_wallet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_wallets_journal_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_wallets_journal_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_wallets_journal_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_wallets_journal_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-wallet.read_character_wallet.v1"
                        ]
                    }
                ],
                "summary": "Get character wallet journal",
                "tags": [
                    "Wallet",
                    "Dummy"
                ]
            }
        },
        "/characters/{character_id}/wallets/transactions/": {
            "get": {
                "description": "Gets the 50 most recent transactions in a characters wallet. Optionally, takes an argument with a transaction ID, and returns the prior 50 transactions\n\n---\n\nAlternate route: `/v1/characters/{character_id}/wallets/transactions/`\n\nAlternate route: `/legacy/characters/{character_id}/wallets/transactions/`\n\nAlternate route: `/dev/characters/{character_id}/wallets/transactions/`\n",
                "operationId": "get_characters_character_id_wallets_transactions",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wallet transactions",
                        "examples": {
                            "application/json": [
                                {
                                    "transaction_date": "2016-10-24T09:00:00Z",
                                    "transaction_id": 1234567890
                                }
                            ]
                        },
                        "schema": {
                            "description": "wallet transactions",
                            "items": {
                                "description": "wallet transaction",
                                "properties": {
                                    "client_id": {
                                        "description": "client_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_transactions_client_id",
                                        "type": "integer"
                                    },
                                    "client_type": {
                                        "description": "client_type string",
                                        "enum": [
                                            "character",
                                            "corporation",
                                            "alliance"
                                        ],
                                        "title": "get_characters_character_id_wallets_transactions_client_type",
                                        "type": "string"
                                    },
                                    "journal_ref_id": {
                                        "description": "journal_ref_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_transactions_journal_ref_id",
                                        "type": "integer"
                                    },
                                    "location_id": {
                                        "description": "location_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_transactions_location_id",
                                        "type": "integer"
                                    },
                                    "location_type": {
                                        "description": "location_type string",
                                        "enum": [
                                            "station",
                                            "structure"
                                        ],
                                        "title": "get_characters_character_id_wallets_transactions_location_type",
                                        "type": "string"
                                    },
                                    "price_per_unit": {
                                        "description": "price_per_unit integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_transactions_price_per_unit",
                                        "type": "integer"
                                    },
                                    "quantity": {
                                        "description": "quantity integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_transactions_quantity",
                                        "type": "integer"
                                    },
                                    "transaction_date": {
                                        "description": "transaction_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_wallets_transactions_transaction_date",
                                        "type": "string"
                                    },
                                    "transaction_for": {
                                        "description": "transaction_for string",
                                        "enum": [
                                            "personal",
                                            "corporate"
                                        ],
                                        "title": "get_characters_character_id_wallets_transactions_transaction_for",
                                        "type": "string"
                                    },
                                    "transaction_id": {
                                        "description": "transaction_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_transactions_transaction_id",
                                        "type": "integer"
                                    },
                                    "transaction_type": {
                                        "description": "transaction_type string",
                                        "enum": [
                                            "buy",
                                            "sell"
                                        ],
                                        "title": "get_characters_character_id_wallets_transactions_transaction_type",
                                        "type": "string"
                                    },
                                    "type_id": {
                                        "description": "type_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_transactions_type_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "transaction_date",
                                    "transaction_id"
                                ],
                                "title": "get_characters_character_id_wallets_transactions_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_wallets_transactions_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-wallet.read_character_wallet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_wallets_transactions_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_wallets_transactions_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_wallets_transactions_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_wallets_transactions_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-wallet.read_character_wallet.v1"
                        ]
                    }
                ],
                "summary": "Get wallet transactions",
                "tags": [
                    "Wallet",
                    "Dummy"
                ]
            }
        },
        "/corporations/{corporation_id}/wallets/": {
            "get": {
                "description": "Dummy\n\n---\n\nAlternate route: `/v1/corporations/{corporation_id}/wallets/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/wallets/`\n\nAlternate route: `/dev/corporations/{corporation_id}/wallets/`\n",
                "operationId": "get_corporations_corporation_id_wallets",
                "parameters": [
                    {
                        "description": "An EVE corporation ID",
                        "format": "int32",
                        "in": "path",
                        "name": "corporation_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Nice Dummy"
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_corporations_corporation_id_wallets_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_wallets_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Dummy Endpoint, Please Ignore",
                "tags": [
                    "Wallet",
                    "Dummy"
                ]
            }
        },
        "/corporations/{corporation_id}/wallets/{wallet_id}/journal/": {
            "get": {
                "description": "Dummy\n\n---\n\nAlternate route: `/v1/corporations/{corporation_id}/wallets/{wallet_id}/journal/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/wallets/{wallet_id}/journal/`\n\nAlternate route: `/dev/corporations/{corporation_id}/wallets/{wallet_id}/journal/`\n",
                "operationId": "get_corporations_corporation_id_wallets_wallet_id_journal",
                "parameters": [
                    {
                        "description": "An EVE corporation ID",
                        "format": "int32",
                        "in": "path",
                        "name": "corporation_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Wallet ID",
                        "format": "int32",
                        "in": "path",
                        "name": "wallet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Nice Dummy"
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_corporations_corporation_id_wallets_wallet_id_journal_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_wallets_wallet_id_journal_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Dummy Endpoint, Please Ignore",
                "tags": [
                    "Wallet",
                    "Dummy"
                ]
            }
        },
        "/corporations/{corporation_id}/wallets/{wallet_id}/transactions/": {
            "get": {
                "description": "Dummy\n\n---\n\nAlternate route: `/v1/corporations/{corporation_id}/wallets/{wallet_id}/transactions/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/wallets/{wallet_id}/transactions/`\n\nAlternate route: `/dev/corporations/{corporation_id}/wallets/{wallet_id}/transactions/`\n",
                "operationId": "get_corporations_corporation_id_wallets_wallet_id_transactions",
                "parameters": [
                    {
                        "description": "An EVE corporation ID",
                        "format": "int32",
                        "in": "path",
                        "name": "corporation_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Wallet ID",
                        "format": "int32",
                        "in": "path",
                        "name": "wallet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Nice Dummy"
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_corporations_corporation_id_wallets_wallet_id_transactions_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_wallets_wallet_id_transactions_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Dummy Endpoint, Please Ignore",
                "tags": [
                    "Wallet",
                    "Dummy"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "evesso": {
            "authorizationUrl": "https://login.eveonline.com/oauth/authorize",
            "flow": "implicit",
            "scopes": {
                "esi-characters.read_contacts.v1": "EVE SSO scope esi-characters.read_contacts.v1",
                "esi-clones.read_clones.v1": "EVE SSO scope esi-clones.read_clones.v1",
                "esi-wallet.read_character_wallet.v1": "EVE SSO scope esi-wallet.read_character_wallet.v1"
            },
            "type": "oauth2"
        }
    },
    "swagger": "2.0"
}
